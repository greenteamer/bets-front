{"version":3,"sources":["theme.js","graphql/queries/user.js","graphql/queries/sport.js","graphql/queries/odd.js","components/ProfileMenu/SidebarProfile.js","components/ProfileMenu/index.js","wrappers/AppStore.js","constants.js","components/Header/index.js","pages/Home/index.js","components/common/Button/index.js","components/common/ButtonForm/index.js","components/common/Card/index.js","components/common/Wrapper/index.js","graphql/mutations/user.js","graphql/mutations/bet.js","pages/Games/Plate/PlateItem.js","pages/Games/utils.js","pages/Games/Plate/index.js","pages/Games/OddsTable.js","pages/Games/Odds.js","components/SidebarMenu/index.js","components/Layouts/ContentLayout.js","pages/Games/index.js","pages/Admin/CreateUserForm.js","pages/Admin/List.js","pages/Admin/index.js","pages/Agent/CreatePlayerForm.js","pages/Agent/PlayerItem.js","pages/Agent/PlayersList.js","pages/Agent/index.js","pages/Schedule/index.js","pages/SignIn/index.js","utils/index.js","Routes.js","App.js","apolloClient.js","utils/errors.js","serviceWorker.js","index.js"],"names":["src_theme","Object","objectSpread","defaultTheme","palette","slate","lightGreyBlue","iceBlue","shamrockGreen","primary","p","secondary","white","Button","css","_templateObject","props","BETS_FRAGMENT","gql","user_templateObject","PLAYERS_FRAGMENT","_templateObject2","GET_USERS","_templateObject3","GET_USER_PLAYERS","_templateObject4","GET_ME","_templateObject5","GET_SPORTS","sport_templateObject","GET_ODDS","odd_templateObject","SidebarProfile","_ref","me","onLogout","react_default","a","createElement","ProfileWrapper","Name","username","BillingInfo","SidebarProfile_InfoItem","title","value","balance","available","atRisk","ButtonS","onClick","HeadingS","as","map","bets","bet","index","MyCard","key","block","team","amount","InfoItem","_ref2","styled","SidebarProfile_templateObject","div","SidebarProfile_templateObject2","h2","SidebarProfile_templateObject3","SidebarProfile_templateObject4","SidebarProfile_templateObject5","_templateObject6","Heading","_templateObject7","ProfileMenu","_this","this","handleLogout","Cookie","remove","refetch","data","ProfileContainer","es","Container","sidebar","HeaderElement","show","assign","fade","Sidebar","Hide","slide","align","HeaderLink","to","Component","ProfileMenu_templateObject","Link","ProfileMenu_templateObject2","span","ProfileMenu_templateObject3","withRouter","graphql","visibilityFilter","user","AppContext","React","createContext","appConsumerWrapper","Children","Consumer","context","AppProvider","state","setVisibilityFilter","setState","updateUserInfo","Provider","children","ROLES","ADMIN","AGENT","PLAYER","COLORS","Header","role","get","HeaderContainer","HeaderName","Logo","Slogan","HeaderMenu","MainMenu","Header_HeaderLink","components_ProfileMenu","Header_templateObject","Header_templateObject2","Header_templateObject3","Header_templateObject4","Header_templateObject5","Header_templateObject6","Header_templateObject7","Home","Button_templateObject","Button_templateObject2","ButtonForm","clearState","handleOnSuccess","popover","onSuccess","hide","handleOnCancel","onCancel","handleOnChange","e","target","_this2","_this$props","placeholder","relative","MyButton","Popover","Toggle","expand","hideOnClickOutside","Arrow","id","type","onChange","marginTop","ButtonForm_templateObject","Card_templateObject","Card_templateObject2","Card_templateObject3","Wrapper_templateObject","GlobalStyle","createGlobalStyle","Wrapper_templateObject2","SIGN_IN","mutations_user_templateObject","SIGN_UP","user_templateObject2","UPDATE_AVAILABLE","user_templateObject3","CREATE_BET","bet_templateObject","PlateItem","handleOnCreateBet","mutate","client","eventId","siteKey","oddType","oddIndex","root","cache","readQuery","query","console","log","variables","input","userId","creatorId","parseInt","then","result","createBet","catch","error","_this$props2","h2h","top","PlateItem_MyCard","template","Item","area","PlateItem_Logo","MyTitle","PlateItem_MyButton","common_ButtonForm","Grid","PlateItem_templateObject","PlateItem_templateObject2","PlateItem_templateObject3","img","PlateItem_templateObject4","PlateItem_templateObject5","withApollo","formatUS","val","rateUSToFixed","Number","toFixed","concat","Plate","odd","theme","gutter","teams","commenceTime","homeTeam","commence_time","sites","formatH2H","values","MyGrid","gap","Time","moment","format","Plate_PlateItem","site_key","Hr","withTheme","Plate_templateObject","Plate_templateObject2","Plate_templateObject3","OddsTable","odds","length","sport_nice","MyGridItem","left","Label","right","backgroundColor","Games_Plate","Overlay","OddsTable_templateObject","OddsTable_templateObject2","OddsTable_templateObject3","Odds","groupName","react_apollo_browser_umd","sport_key","loading","Games_OddsTable","Menu","match","tree","NavigationS","SidebarMenu_HeadingS","keys","item","hidden","HiddenS","obj","SidebarMenu_ButtonS","LinkS","url","Navigation","SidebarMenu_templateObject","SidebarMenu_templateObject2","SidebarMenu_templateObject3","SidebarMenu_templateObject4","SidebarMenu_templateObject5","Hidden","SidebarMenu_templateObject6","generateTemplate","margin","Games","sports","mapSports","s","group","groupBy","Layouts_ContentLayout","SidebarMenu","Route","path","component","exact","render","CreatePlayerForm","email","password","handleOnAddPlayer","_this$state","signUp","onHide","handleOnChangeInput","name","defineProperty","_this$state2","marginBottom","CreateUserForm_templateObject","PlayerRaw","player","style","padding","PlayersList","toggleForm","showForm","fetchPolicy","users","overlay","Show","List_MyOverlay","CreateUserForm","List_PlayerRaw","MyOverlay","List_templateObject","Agent","List","agentId","update","newPlayer","writeQuery","players","CreatePlayerForm_Container","CreatePlayerForm_templateObject","PlayerItem","handleOnUpdateAvailable","PlayerItem_MyCard","PlayerItem_MyTitle","PlayerItem_MyButton","PlayerItem_templateObject","PlayerItem_templateObject2","PlayerItem_templateObject3","PlayerItem_templateObject4","PlayersList_MyOverlay","Agent_CreatePlayerForm","PlayersList_MyGridItem","PlayersList_Label","center","ListContainer","Agent_PlayerItem","PlayersList_templateObject","PlayersList_templateObject2","PlayersList_templateObject3","PlayersList_templateObject4","MessageContainer","Schedule_templateObject","createMessage","Schedule_templateObject2","Messages","text","handleOnChangeText","handleOnSave","Schedule_templateObject3","messages","createdAt","SignIn","handleOnSignIn","signIn","_result$data$signIn","token","set","history","push","SignIn_Container","MyBackdrop","visible","SignIn_MyOverlay","MyLink","SignIn_templateObject","SignIn_templateObject2","SignIn_templateObject3","Backdrop","SignIn_templateObject4","getAccessByRoles","rolesList","includes","Routes","Switch","Admin","Redirect","pages_Agent","Schedule","App","components_Header","src_Routes","httpLink","createHttpLink","uri","authLink","setContext","_","headers","Authorization","logLink","onError","graphQLErrors","networkError","errorArr","err","extensions","code","statusCode","errorParser","window","location","href","apolloClient","ApolloClient","link","InMemoryCache","Boolean","hostname","ReactDOM","BrowserRouter","AppStore_AppProvider","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d768c3c.chunk.js","sourcesContent":["import { css } from \"reakit\";\nimport defaultTheme from \"reakit-theme-default\";\nimport { prop, palette as p } from 'styled-tools';\n\n\nexport default {\n  ...defaultTheme,\n\n  palette: {\n    ...defaultTheme.palette,\n\n    slate: '#455266',\n    lightGreyBlue: '#aeb8c7',\n    iceBlue: '#eef1f4',\n    shamrockGreen: '#00cf4f',\n\n    primary: [p('slate'), p('lightGreyBlue'), p('iceBlue')],\n    secondary: [p('shamrockGreen')],\n  },\n\n  white: 'white',\n\n  Button: css`\n    ${defaultTheme.Button};\n    background-color: ${props => props.secondary ? p('shamrockGreen') : p('slate')};\n  `,\n\n}","import gql from \"graphql-tag\";\n\nexport const BETS_FRAGMENT = gql`\n  fragment UserBets on User {\n    bets {\n      id\n      amount\n      team\n    }\n  }\n`;\n\nexport const PLAYERS_FRAGMENT = gql`\n  fragment UserPlayers on User {\n    players {\n      id\n      agentId\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n    }\n  }\n  ${BETS_FRAGMENT}\n`;\n\nexport const GET_USERS = gql`\n  { \n    users {\n      id\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n    }\n  }\n  ${BETS_FRAGMENT}\n`;\n\nexport const GET_USER_PLAYERS = gql`\n  { \n    me {\n      id\n      agentId\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n      ...UserPlayers\n    }\n  }\n  ${PLAYERS_FRAGMENT}\n  ${BETS_FRAGMENT}\n`;\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      agentId\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n      ...UserPlayers\n    }\n  }\n  ${PLAYERS_FRAGMENT}\n  ${BETS_FRAGMENT}\n`;\n\n","import gql from \"graphql-tag\";\n\n\nexport const GET_SPORTS = gql`\n  {\n    sports {\n      id\n      key\n      active\n      group\n      details\n      title\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n\nexport const GET_ODDS = gql`\n  query ($sport_key:String!) {\n    odds(sport_key:$sport_key) {\n      id\n      sport_key\n      sport_nice\n      teams\n      commence_time\n      home_team\n      sites {\n        site_key\n        site_nice\n        last_update\n        odds {\n          h2h\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Cookie from 'js-cookie';\nimport { graphql } from \"react-apollo\";\nimport { styled, Block, Button, Backdrop, Sidebar, Heading } from \"reakit\";\nimport { palette as p } from 'styled-tools';\nimport { map } from 'lodash';\n\n\nexport default ({ me, onLogout }) => (\n  <ProfileWrapper>\n    <Name>{me.username}</Name>\n    <BillingInfo>\n      <InfoItem title=\"Balance\" value={me.balance} />\n      <InfoItem title=\"Available\" value={me.available} />\n      <InfoItem title=\"At Risk\" value={me.atRisk} />\n    </BillingInfo>\n    <ButtonS onClick={onLogout}>Logout</ButtonS>\n    <div>\n      <HeadingS as=\"h4\">Your bets</HeadingS>\n      {map(me.bets, (bet, index) => (\n        <MyCard key={index} block>\n          <div>{bet.team}</div>\n          <div>{bet.amount} $</div>\n        </MyCard>\n      ))}\n    </div>\n  </ProfileWrapper>\n);\n\nconst InfoItem = ({ title, value }) => (\n  <div>{title}: {value}</div>\n);\n\nconst ButtonS = styled(Button)`\n  width: 100%;\n`;\nconst ProfileWrapper = styled.div`\n  min-width: 30rem;\n  padding: 1rem;\n`;\nconst Name = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n`;\nconst BillingInfo = styled.div`\n  padding: 1rem;\n  margin: 1rem 0;\n`;\nconst BillingItem = styled.div`\n`;\n\nconst MyCard = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background-color: ${p('iceBlue')};\n`;\n\nconst HeadingS = styled(Heading)`\n  margin-top: 2rem!important;\n  text-align: center;\n`;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport Cookie from 'js-cookie';\nimport { graphql } from \"react-apollo\";\nimport { Block, Button, Backdrop, Sidebar } from \"reakit\";\n\nimport { GET_ME } from '../../graphql/queries'\nimport SidebarProfile from './SidebarProfile';\n\n\nclass ProfileMenu extends Component {\n  render() {\n    const { me } = this.props;\n    const handleLogout = () => {\n      Cookie.remove('token');\n      const { data: { refetch } } = this.props;\n      refetch();\n    }\n    if (me) {\n      return (\n        <ProfileContainer>\n          <Sidebar.Container>\n            {sidebar => (\n              <Block>\n                {/* <Button as={Sidebar.Show} {...sidebar}> */}\n                <HeaderElement\n                  onClick={sidebar.show}>\n                  Profile\n                </HeaderElement>\n                {/* </Button> */}\n                <Backdrop fade as={Sidebar.Hide} {...sidebar} />\n                <Sidebar slide align=\"right\" {...sidebar}>\n                  <SidebarProfile me={me} onLogout={handleLogout} />\n                </Sidebar>\n              </Block>\n            )}\n          </Sidebar.Container>\n        </ProfileContainer>\n      )\n    }\n    return (\n      <ProfileContainer>\n        <HeaderLink to=\"/sign-in\">Sing In</HeaderLink>\n      </ProfileContainer>\n    )\n  }\n}\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  color: white;\n`;\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n`;\n\nconst HeaderElement = styled.span`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\n\nexport default withRouter(graphql(GET_ME)(ProfileMenu))","import React from \"react\"\n\nconst value = {\n  visibilityFilter: \"SHOW_ALL\",\n  user: null,\n}\n\nexport const AppContext = React.createContext(value);\n\nexport const appConsumerWrapper = Children => props => (\n  <AppContext.Consumer>\n    {context => \n      <Children {...props} {...context} />\n    }\n  </AppContext.Consumer>\n);\n\nexport default class AppProvider extends React.Component {\n  state = value\n\n  setVisibilityFilter = visibilityFilter => {\n    this.setState({ visibilityFilter })\n  }\n\n  updateUserInfo = user => {\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n\n          visibilityFilter: this.state.visibilityFilter,\n          setVisibilityFilter: this.setVisibilityFilter,\n\n          // user info\n          user: this.state.user,\n          updateUserInfo: this.updateUserInfo,\n\n        }}>\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n}","export const ROLES = {\n  ADMIN: 'ADMIN',\n  AGENT: 'AGENT',\n  PLAYER: 'PLAYER',\n};\n\nexport const COLORS = {\n  white: 'white',\n  iceBlue: '#eef1f4',\n  lightGreyBlue: '#aeb8c7',\n  slate: '#455266',\n  shamrockGreen: '#00cf4f',\n  black: '#1b1b1b',\n}\n\nexport const theme = {\n  colors: {\n    primary: COLORS.slate,\n    secondary: COLORS.shamrockGreen,\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { get } from 'lodash';\n\nimport ProfileMenu from '../ProfileMenu';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { ROLES } from '../../constants';\n\n\nclass Header extends Component {\n\n  render() {\n    const { me } = this.props;\n    const role = get(me, ['role'])\n\n    return (\n      <HeaderContainer>\n        <HeaderName>\n          <Logo>Positive Bets</Logo>\n          <Slogan>Make bets is easy as posible</Slogan>\n        </HeaderName>\n        <HeaderMenu>\n          <MainMenu>\n            <HeaderLink to=\"/\">\n              Home\n            </HeaderLink>\n            <HeaderLink to=\"/games\">\n              Games\n            </HeaderLink>\n            {role === ROLES.ADMIN &&\n              <HeaderLink to=\"/admin\">\n                Admin\n              </HeaderLink>\n            }\n            {role === ROLES.AGENT &&\n              <HeaderLink to=\"/agent\">\n                Agent\n              </HeaderLink>\n            }\n          </MainMenu>\n          <ProfileMenu me={me} />\n        </HeaderMenu>\n      </HeaderContainer>\n    )\n  }\n}\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  padding: 1rem;\n  justify-content: space-between;\n  background: #376f9a;\n  color: white;\n`;\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n`;\n\nconst HeaderMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst MainMenu = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst HeaderName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  font-size: 3.5rem;\n`;\n\nconst Slogan = styled.div`\n  display: flex;\n  align-self: flex-start;\n`;\n\nexport default withRouter(appConsumerWrapper(Header))","\nimport React from 'react';\n\nexport default () => (\n  <h1>Home 1</h1>\n);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nexport default styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: box-shadow 0.5s;\n  box-shadow: 1px 2px 20px rgba(0,0,0,0.1);\n  border-radius: 10rem;\n  padding: 0.5rem 2rem;\n  ${props => props.primary && css`\n    background: #376f9a;\n    color: white;\n  `};\n  &:hover {\n    cursor: pointer;\n    box-shadow: 1px 2px 20px rgba(0,0,0,0.2);\n  }\n  {...props}\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Popover,\n  Block,\n  Field,\n  Input,\n  Group,\n} from 'reakit';\nimport { palette as p } from 'styled-tools';\n\n\nclass ButtonForm extends React.Component { \n  state = {\n    value: '',\n  }\n\n  clearState = () => {\n    this.setState({ value: '' });\n  }\n\n  handleOnSuccess = popover => () => {\n    const { value } = this.state;\n    const { onSuccess } = this.props;\n    onSuccess(value);\n    this.clearState();\n    popover.hide();\n  }\n \n\n  handleOnCancel = popover => () => {\n    const { onCancel } = this.props;\n    onCancel();\n    this.clearState();\n    popover.hide();\n  }\n\n  handleOnChange = e => {\n    const { value } = e.target;\n    this.setState({ value });\n  }\n\n  render() { \n    const { children, placeholder } = this.props;\n    const { value } = this.state;\n    return (\n      <Popover.Container>\n        {popover => (\n          <Block relative>\n            <MyButton as={Popover.Toggle} {...popover}>\n              {children}\n            </MyButton>\n            <Popover fade slide expand hideOnClickOutside {...popover}>\n              <Popover.Arrow />\n              <Block>\n                <Field>\n                  <Input\n                    id=\"input1\"\n                    type=\"number\"\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={this.handleOnChange}\n                  />\n                </Field>\n                <Group marginTop={8}>\n                  <Button secondary onClick={this.handleOnSuccess(popover)}>Ok</Button>\n                  <Button onClick={this.handleOnCancel(popover)}>Cancel</Button>\n                </Group>\n              </Block>\n            </Popover>\n          </Block>\n        )}\n      </Popover.Container>\n    );\n  }\n}\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default ButtonForm;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { COLORS } from '../../../constants';\n\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 1px 2px 50px rgba(0,0,0,0.1);\n`;\n\nexport const CardHeader = styled.div`\n  text-align: center;\n  border-bottom: 1px solid #c8e0f5;\n  padding: 1rem;\n  font-size: 2rem;\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { COLORS } from '../../../constants';\n\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  background-color: ${COLORS.iceBlue};\n  padding: 2rem;\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    @import url('https://fonts.googleapis.com/css?family=Rubik:300,400,500');\n    font-family: 'Rubik', sans-serif;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-size: 8px;\n  }\n\n  body {\n    margin: 0;\n  }\n\n  body, a, p, span {\n    font-size: 1.75rem;\n  }\n\n  h1 {\n    font-weight: 400;\n  }\n`\n","import gql from \"graphql-tag\";\n\n\nexport const SIGN_IN = gql`\n  mutation ($username: String!, $password: String!) {\n    signIn(login: $username, password: $password) {\n      token\n      me {\n        id\n        agentId\n        username\n        email\n        role\n        players {\n          id\n          agentId\n          email\n          username\n          role\n        }\n      }\n    }\n  }\n`;\n\n\nexport const SIGN_UP = gql`\n  mutation ($username: String!, $email: String!, $password: String!, $role: String!, $agentId: ID) {\n    signUp(username: $username, email: $email, password: $password, role: $role, agentId: $agentId) {\n      id\n      username\n      email\n      role\n      agentId\n    }\n  }\n`;\n\nexport const UPDATE_AVAILABLE = gql`\n  mutation ($input: UpdateAvailableInput!) {\n    updateAvailable(input: $input) {\n      id\n      available\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n\nexport const CREATE_BET = gql`\n  mutation ($input: CreateBetInput!) {\n    createBet(input: $input) {\n      id\n      available\n      bets {\n        id\n        amount\n        team\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Block,\n  Grid,\n} from 'reakit';\nimport { palette as p } from 'styled-tools';\nimport { graphql, withApollo } from 'react-apollo';\nimport { get } from 'lodash';\n\nimport { ButtonForm } from '../../../components/common';\nimport { CREATE_BET } from '../../../graphql/mutations';\nimport { GET_ME } from '../../../graphql/queries';\n\n\nconst template = `\n  \"a b c d e\" 40px / 40px 1fr 120px 120px 120px\n`;\n\nclass PlateItem extends React.Component { \n\n  handleOnCreateBet = value => {\n    const { mutate, client, eventId, siteKey, oddType, oddIndex, team } = this.props;\n    const root = client.cache.readQuery({ query: GET_ME });\n    const me = get(root, ['me']);\n    console.log('>>> handleOnCreateBet props: ', { mutate, client, me });\n    if (!me) {\n      console.log('>>> Error when getting me from cache');\n      return;\n    }\n\n    const input = {\n      userId: me.id,\n      creatorId: me.id,\n      amount: parseInt(value, 10),\n      eventId,\n      siteKey,\n      oddType,\n      oddIndex,\n      team,\n    }\n\n    mutate({\n      variables: {\n        input,\n      },\n    }).then(result => {\n      const { data: { createBet } } = result;\n      console.log('>>>> create bet mutation result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() { \n    const { team, h2h, top } = this.props;\n    return (\n      <MyCard template={template} top={top}>\n        <Grid.Item area=\"a\">\n          <Logo>Logo</Logo>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <MyTitle>{team}</MyTitle>\n        </Grid.Item>\n        <Grid.Item area=\"c\">\n          <MyButton>{0}</MyButton>\n        </Grid.Item>\n        <Grid.Item area=\"d\">\n          <MyButton>{0}</MyButton>\n        </Grid.Item>\n        <Grid.Item area=\"e\">\n          <ButtonForm\n            placeholder=\"0\"\n            onSuccess={this.handleOnCreateBet}\n            onCancel={value => console.log('&&& on cancel: ', { value })}\n          >\n            {h2h}\n          </ButtonForm>\n        </Grid.Item>\n      </MyCard>\n    );\n  }\n}\n\n\nconst MyCard = styled(Grid)`\n  align-items: center;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.top ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.top ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.top ? 0 : '0.5rem'};\n  border-bottom-right-radius: ${props => props.top ? 0 : '0.5rem'};\n  &:hover {\n    box-shadow: 0 0 1px rgba(0,0,0,0.5); \n  }\n`;\n\nconst MyTitle = styled.div`\n  margin-left: 1rem;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.25rem;\n  padding: 1rem;\n  color: ${p('slate')};\n`;\n\nconst MyImage = styled.img`\n  border-top-left-radius: ${props => props.top ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.top ? 0 : '0.5rem'};\n`;\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default withApollo(graphql(CREATE_BET)(PlateItem));","import { map } from 'lodash';\n\n\nexport const formatUS = val => {\n  if (val < 2) {\n    const del = val - 1;\n    const rateUS = 1 / del * 100;\n    const rateUSToFixed = Number((rateUS).toFixed(0));\n    return `-${rateUSToFixed}`;\n  }\n  const rateUSToFixed = Number((val * 100 - 100).toFixed(0));\n  return `+${rateUSToFixed}`;\n}","import React from 'react';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\nimport moment from 'moment';\nimport { map, get } from 'lodash';\n\nimport PlateItem from './PlateItem';\nimport { ButtonForm } from '../../../components/common';\nimport { formatUS } from '../utils';\n\n\nclass Plate extends React.Component {\n  render() {\n    const { theme, gutter, odd } = this.props;\n    const { teams, homeTeam, commence_time: commenceTime, sites, h2h, id } = odd;\n\n    console.log('>>> Odd(event) id: ', { odd });\n\n    const formatH2H = odd => {\n      const sites = get(odd, ['sites']);\n      const values = get(sites[0], ['odds', 'h2h']);\n      return map(values, formatUS);\n    }\n\n    const template = `\n      \"a b\" auto / 120px auto\n    `;\n    return (\n      <MyGrid template={template} gap=\"16px\">\n        <Grid.Item area=\"a\">\n          <Time>\n            <div>\n              {moment(commenceTime * 1000).format('MMM DD')}\n            </div>\n            <div>\n              {moment(commenceTime * 1000).format('h:mm a')}\n            </div>\n          </Time>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <PlateItem\n            eventId={odd.id}\n            siteKey={sites[0].site_key}\n            oddType=\"h2h\"\n            oddIndex={0}\n            team={teams[0]}\n            h2h={formatH2H(odd)[0]}\n            top\n          />\n          <Hr />\n          <PlateItem\n            eventId={odd.id}\n            siteKey={sites[0].site_key}\n            oddType=\"h2h\"\n            oddIndex={1}\n            team={teams[1]}\n            h2h={formatH2H(odd)[1]}\n          />\n        </Grid.Item>\n      </MyGrid>\n    );\n  }\n}\n\nexport default withTheme(Plate);\n\nconst Time = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100%;\n  flex-direction: column;\n  background-color: ${p('white')};\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.5rem;\n  /* height: 100%; */\n`;\n\nconst MyGrid = styled(Grid)`\n  margin-bottom: 2rem;\n`;\n\nconst Hr = styled.div`\n  height: 1px;\n  width: 100%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme, Heading } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_ODDS } from '../../graphql/queries';\nimport Plate from './Plate';\nimport { formatUS } from './utils';\n\n\nclass OddsTable extends React.Component {\n\n  render() {\n    const { theme, odds } = this.props;\n    const groupName = get(this.props, ['match', 'params', 'groupName']);\n    const template = `\n      \"a a1 ab ac ad\" auto\n      \"c c c c c\" auto / 136px auto 120px 120px 120px\n    `;\n    if (odds.length === 0) return <p>no odds</p>;\n    return (\n      <div>\n        <Heading as=\"h4\">{ odds[0].sport_nice }</Heading>\n        <Grid template={template} gap=\"16px 0\">\n          <MyGridItem area=\"a\" left><Label>Date 1</Label></MyGridItem>\n          <MyGridItem area=\"a1\"></MyGridItem>\n          <MyGridItem area=\"ab\"><Label>Spread</Label></MyGridItem>\n          <MyGridItem area=\"ac\"><Label>Total</Label></MyGridItem>\n          <MyGridItem area=\"ad\" right><Label>M Line</Label></MyGridItem>\n          <Grid.Item area=\"c\" backgroundColor={theme.palette.iceBlue}>\n            {map(odds, (odd, index) => (\n              <Plate\n                key={index}\n                gutter=\"1rem 0\"\n                odd={odd}\n              />\n            ))}\n          </Grid.Item>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withTheme(OddsTable);\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyGridItem = styled(Grid.Item)`\n  padding: 0.5rem 0;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.right ? '0.5rem' : 0};\n  border-bottom-right-radius: ${props => props.right ? '0.5rem' : 0};\n`;\n\nconst Label = styled.div`\n  text-align: center;\n  /* justify-items: center; */\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_ODDS } from '../../graphql/queries';\nimport Plate from './Plate';\nimport { formatUS } from './utils';\nimport OddsTable from './OddsTable';\n\n\nclass Odds extends React.Component {\n  render() {\n    const groupName = get(this.props, ['match', 'params', 'groupName']);\n    return (\n      <Query query={GET_ODDS} variables={{ sport_key: groupName }}>\n        {({ loading, client, data }) => {\n          const odds = get(data, ['odds']);\n          if (!odds) return <div>Loading....</div>;\n          return (\n            <OddsTable odds={odds} />\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Odds;\n","import React from 'react';\nimport { styled, Button, Box, Navigation, List, Heading, Hidden, Block } from 'reakit';\nimport { palette as p, prop } from 'styled-tools';\nimport { Link } from 'react-router-dom'\nimport { map } from 'lodash';\n\n\nconst Menu = ({ match, tree }) => {\n  return (\n    <Box>\n      <NavigationS>\n        <HeadingS as=\"h4\">Games Panel</HeadingS>\n        <List>\n          {map(Object.keys(tree), item => (\n            <Hidden.Container key={item}>\n              {hidden => (\n                <li>\n                  <Hidden.Toggle as={ButtonS} {...hidden}>{item}</Hidden.Toggle>\n                  <HiddenS {...hidden}>\n                    {map(tree[item], (obj, index) => (\n                      <ButtonS key={index}><LinkS to={obj.url}>{obj.title}</LinkS></ButtonS>\n                    ))}\n                  </HiddenS>\n                </li>\n              )}\n            </Hidden.Container>\n          ))}\n        </List>\n      </NavigationS>\n    </Box>\n  );\n}\n\nexport default Menu;\n\nconst NavigationS = styled(Navigation)`\n  /* width: 25rem; */\n  background-color: ${p('primary', 0)};\n  padding: 1rem;\n`;\n\nconst ButtonS = styled(Button)`\n  display: block;\n  text-align: left;\n  width: 100%;\n  height: 3rem;\n  line-height: 3rem;\n`;\n\nconst HeadingS = styled(Heading)`\n  color: ${p('blackText')};\n`;\n\nconst LinkS = styled(Link)`\n  color: ${p('blackText')};\n  text-decoration: none;\n`;\n\nconst LinkEmpty = styled.a`\n  display: block;\n  padding: 0.5rem;\n  color: ${p('blackText')};\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst HiddenS = styled(Hidden)`\n  padding: 1rem;\n`;","import React from 'react';\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../SidebarMenu';\n\n\nconst ContentLayout = ({ theme, children, sidebar }) => { \n  const template = generateTemplate(sidebar);\n  return (\n    <Grid template={template}>\n      {sidebar &&\n        <Grid.Item area=\"b\" backgroundColor={theme.palette.slate}>\n          {sidebar}\n        </Grid.Item>\n      }\n      <Grid.Item area=\"c\" backgroundColor={theme.palette.iceBlue}>\n        <Block margin=\"2rem\">\n          {children}\n        </Block>\n      </Grid.Item>\n    </Grid>\n  );\n}\n\nexport default withTheme(ContentLayout);\n\nconst generateTemplate = sidebar => {\n  if (sidebar) return `\n    \"b c c\" auto / 1fr 2fr 2fr\n  `;\n  return `\n    \"c c c\" auto / 1fr 2fr 2fr\n  `;\n}","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Query } from 'react-apollo';\nimport { get, groupBy, map } from 'lodash';\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport { GET_SPORTS } from '../../graphql/queries';\nimport Odds from './Odds';\nimport SidebarMenu from '../../components/SidebarMenu';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\n\nconst Games = ({ match }) => (\n  <Query query={GET_SPORTS}>\n    {({ loading, client, data }) => { \n      const sports = get(data, ['sports']);\n      const mapSports = map(sports, s => ({ group: s.group, title: s.title, url: `/games/${s.key}` }));\n      const tree = groupBy(mapSports, 'group');\n      return (\n        <ContentLayout\n          sidebar={<SidebarMenu match={match} tree={tree} />}\n        >\n          <Route path={`${match.path}/:groupName`} component={Odds} />\n          <Route\n            exact\n            path={match.path}\n            render={() => <h3>Please select a page.</h3>}\n          />\n        </ContentLayout>\n      );\n    }}\n  </Query>\n);\n\nexport default Games;","import React from 'react';\nimport { graphql } from \"react-apollo\";\nimport { get } from 'lodash';\nimport { Button, Input, Field, Label, styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { SIGN_UP } from '../../graphql/mutations';\nimport { GET_USER_PLAYERS, GET_ME } from '../../graphql/queries';\nimport { ROLES } from '../../constants'\n\n\nclass CreatePlayerForm extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  }\n\n  handleOnAddPlayer = () => {\n    const { mutate, me } = this.props;\n    console.log('>>>> handle on add user me: ', { me });\n    const { username, email, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        email,\n        password,\n        role: ROLES.AGENT,\n        // agentId: me.id,\n      },\n      // update: (cache, { data }) => {\n      //   const newPlayer = get(data, ['signUp']);\n      //   const root = cache.readQuery({ query: GET_ME })\n      //   cache.writeQuery({\n      //     query: GET_ME,\n      //     data: {\n      //       me: {\n      //         ...root.me,\n      //         players: root.me.players.concat([newPlayer]),\n      //       },\n      //     },\n      //   });\n      // }\n    }).then(result => {\n      const { data: { signUp } } = result;\n      const { onHide } = this.props;\n      onHide();\n      // this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  handleOnChangeInput = (name) => (e) => {\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <Container>\n        <h3>Create Player</h3>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={this.handleOnChangeInput('username')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleOnChangeInput('email')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleOnChangeInput('password')}\n          />\n        </Field>\n        <Button onClick={this.handleOnAddPlayer} primary>Create</Button>\n      </Container>\n    )\n  }\n}\n\nexport default graphql(SIGN_UP)(CreatePlayerForm);\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Button, Overlay, Block, Backdrop } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_USERS } from '../../graphql/queries';\nimport CreateUserForm from './CreateUserForm';\n\n\nconst PlayerRaw = ({ player }) => (\n  <div key={player.id} style={{ backgroundColor: '#eaeaea', padding: '3px', marginBottom: '3px' }}>\n    <div>{player.username}</div>\n    <div>{player.email}</div>\n  </div>\n);\n\nclass PlayersList extends React.Component {\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.showForm,\n    });\n  }\n\n  render() {\n    console.log('**** Player List props: ', { props: this.props });\n    return (\n      <Query query={GET_USERS} fetchPolicy=\"network-only\">\n        {({ loading, client, data }) => {\n          const users = get(data, ['users']);\n          const me = get(data, ['me']);\n          if (!users) return <div>Loading....</div>;\n          return (\n            <div>\n              <h3>Add user</h3>\n              <Overlay.Container>\n                {overlay => (\n                  <Block>\n                    <Button as={Overlay.Show} {...overlay}>Add</Button>\n                    <Backdrop fade as={Overlay.Hide} {...overlay} />\n                    <MyOverlay fade slide {...overlay}>\n                      <CreateUserForm me={me} onHide={overlay.hide} />\n                    </MyOverlay>\n                  </Block>\n                )}\n              </Overlay.Container>\n              <h3>User list {users.length}</h3>\n              {map(users, user => (\n                <PlayerRaw player={user} key={user.id} />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default PlayersList;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../../components/SidebarMenu';\nimport List from './List';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\nconst template = `\n  \"b c c\" minmax(200px, 1fr)\n  \"d d d\" 100px / 1fr 2fr 2fr\n`;\n\nconst tree = {\n  users: [\n    {\n      title: 'list',\n      url: '/admin/users',\n    },\n  ],\n}\n\nconst Agent = ({ match }) => (\n  <ContentLayout\n    sidebar={<SidebarMenu match={match} tree={tree} />}\n  >\n    <Route path={`${match.path}/users`} component={List} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a page.</h3>}\n    />\n  </ContentLayout>\n);\n\nexport default Agent;","import React from 'react';\nimport { graphql } from \"react-apollo\";\nimport { get } from 'lodash';\nimport { Button, Input, Field, Label, styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { SIGN_UP } from '../../graphql/mutations';\nimport { GET_USER_PLAYERS, GET_ME } from '../../graphql/queries';\nimport { ROLES } from '../../constants'\n\n\nclass CreatePlayerForm extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  }\n\n  handleOnAddPlayer = () => {\n    const { mutate, me } = this.props;\n    const { username, email, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        email,\n        password,\n        role: ROLES.PLAYER,\n        agentId: me.id,\n      },\n      update: (cache, { data }) => {\n        const newPlayer = get(data, ['signUp']);\n        const root = cache.readQuery({ query: GET_ME })\n        cache.writeQuery({\n          query: GET_ME,\n          data: {\n            me: {\n              ...root.me,\n              players: root.me.players.concat([newPlayer]),\n            },\n          },\n        });\n      }\n    }).then(result => {\n      const { data: { signUp } } = result;\n      const { onHide } = this.props;\n      onHide();\n      // this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  handleOnChangeInput = (name) => (e) => {\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <Container>\n        <h3>Create Player</h3>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={this.handleOnChangeInput('username')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleOnChangeInput('email')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleOnChangeInput('password')}\n          />\n        </Field>\n        <Button onClick={this.handleOnAddPlayer} primary>Create</Button>\n      </Container>\n    )\n  }\n}\n\nexport default graphql(SIGN_UP)(CreatePlayerForm);\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Block,\n  Grid,\n} from 'reakit';\nimport { get } from 'lodash';\nimport { palette as p } from 'styled-tools';\nimport { withApollo, graphql } from 'react-apollo';\n\nimport { ButtonForm } from '../../components/common';\nimport { UPDATE_AVAILABLE } from '../../graphql/mutations';\nimport { GET_ME } from '../../graphql/queries';\n\n\nconst template = `\n  \"a b c d e\" 40px / 1fr 1fr 120px 120px 120px\n`;\n\nclass PlayerItem extends React.Component { \n\n  handleOnUpdateAvailable = value => {\n    const { id, mutate, client } = this.props;\n    const input = {\n      value: parseInt(value, 10),\n      userId: id,\n    }\n    mutate({\n      variables: {\n        input,\n      },\n    }).then(result => {\n      console.log('>>>> update available result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() { \n    const { id, username, email, balance, available, atRisk } = this.props;\n    return (\n      <MyCard template={template}>\n        <Grid.Item area=\"a\">\n          <MyTitle>{username}</MyTitle>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <MyTitle>{email}</MyTitle>\n        </Grid.Item>\n        <Grid.Item area=\"c\">\n          <MyButton>{balance}</MyButton>\n        </Grid.Item>\n        <Grid.Item area=\"d\">\n          <ButtonForm\n            placeholder=\"0\"\n            onSuccess={this.handleOnUpdateAvailable}\n            onCancel={value => console.log('&&& on cancel: ', { value })}\n          >\n            {available}\n          </ButtonForm>\n        </Grid.Item>\n        <Grid.Item area=\"e\">\n          <MyButton>{atRisk}</MyButton>\n        </Grid.Item>\n      </MyCard>\n    );\n  }\n }\n\n\nconst MyCard = styled(Grid)`\n  align-items: center;\n  background-color: ${p('white')};\n  border-radius: 0.5rem;\n  &:hover {\n    box-shadow: 0 0 1px rgba(0,0,0,0.5); \n  }\n`;\n\nconst MyTitle = styled.div`\n  margin-left: 1rem;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.25rem;\n  padding: 1rem;\n  color: ${p('slate')};\n`;\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default withApollo(graphql(UPDATE_AVAILABLE)(PlayerItem));","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Button, Overlay, Block, Backdrop, Grid } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_USER_PLAYERS } from '../../graphql/queries';\nimport CreatePlayerForm from './CreatePlayerForm';\nimport PlayerItem from './PlayerItem';\n\n\nconst PlayerRaw = ({ player }) => (\n  <div key={player.id} style={{ backgroundColor: '#eaeaea', padding: '3px', marginBottom: '3px' }}>\n    <div>{player.username}</div>\n    <div>{player.email}</div>\n  </div>\n);\n\nconst template = `\n  \"a a1 ab ac ad\" auto\n  \"c c c c c\" auto / 1fr 1fr 120px 120px 120px\n`;\n\nclass PlayersList extends React.Component {\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.showForm,\n    });\n  }\n\n  render() {\n    return (\n      <Query query={GET_USER_PLAYERS} fetchPolicy=\"network-only\">\n        {({ loading, client, data }) => {\n          const players = get(data, ['me', 'players']);\n          const me = get(data, ['me']);\n          if (!players) return <div>Loading....</div>;\n          return (\n            <div>\n              <Overlay.Container>\n                {overlay => (\n                  <Block>\n                    <Button as={Overlay.Show} {...overlay} marginBottom=\"2rem\">Sign Up player</Button>\n                    <Backdrop fade as={Overlay.Hide} {...overlay} />\n                    <MyOverlay fade slide {...overlay}>\n                      <CreatePlayerForm me={me} onHide={overlay.hide} />\n                    </MyOverlay>\n                  </Block>\n                )}\n              </Overlay.Container>\n\n              <Grid template={template} gap=\"16px 0\">\n                <MyGridItem area=\"a\" left><Label>Username</Label></MyGridItem>\n                <MyGridItem area=\"a1\"><Label>Email</Label></MyGridItem>\n                <MyGridItem area=\"ab\"><Label center>Balance</Label></MyGridItem>\n                <MyGridItem area=\"ac\"><Label center>Available</Label></MyGridItem>\n                <MyGridItem area=\"ad\" right><Label center>At Risk</Label></MyGridItem>\n                <Grid.Item area=\"c\">\n                  {map(players, player => (\n                    <ListContainer key={player.id}>\n                      <PlayerItem\n                        id={player.id}\n                        username={player.username}\n                        email={player.email}\n                        balance={player.balance}\n                        available={player.available}\n                        atRisk={player.atRisk}\n                        key={player.id}\n                      />\n                    </ListContainer>\n                  ))}\n                </Grid.Item>\n              </Grid>\n\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default PlayersList;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst ListContainer = styled.div`\n  margin-top: 1rem;\n`;\n\nconst MyGridItem = styled(Grid.Item)`\n  padding: 0.5rem 0;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.right ? '0.5rem' : 0};\n  border-bottom-right-radius: ${props => props.right ? '0.5rem' : 0};\n`;\n\nconst Label = styled.div`\n  text-align: ${props => props.center ? 'center' : 'left'};\n  margin-left: 1rem;\n  /* justify-items: center; */\n`;\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../../components/SidebarMenu';\nimport PlayersList from './PlayersList';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\nconst template = `\n  \"b c c\" minmax(200px, 1fr)\n  \"d d d\" 100px / 1fr 2fr 2fr\n`;\n\nconst tree = {\n  players: [\n    {\n      title: 'list',\n      url: '/agent/players',\n    },\n  ],\n}\n\nconst Agent = ({ match }) => (\n  <ContentLayout\n    sidebar={<SidebarMenu match={match} tree={tree} />}\n  >\n    <Route path={`${match.path}/players`} component={PlayersList} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a page.</h3>}\n    />\n  </ContentLayout>\n);\n\nexport default Agent;","import React, { Component } from 'react';\nimport { Mutation, graphql, Query, renderToStringWithData } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nimport Button from '../../components/common/Button';\n\n\nconst MessageContainer = styled.div`\n  display: block;\n  border: 1px solid #366d9d;\n  padding: 1rem;\n  margin: 1rem;\n`;\n\nconst createMessage = gql`\n  mutation ($text: String!) {\n    createMessage(text: $text) {\n      message {\n        id\n        text\n      }\n      me {\n        id\n        username\n        messages {\n          id\n          text\n        }\n      }\n    }\n  }\n`;\n\nclass Messages extends Component {\n  state = {\n    text: '',\n  }\n\n  handleOnChangeText = (e) => {\n    this.setState({ text: e.target.value });\n  }\n\n  handleOnSave = () => {\n    const { mutate } = this.props;\n    const { text } = this.state;\n    mutate({\n      variables: {\n        text,\n      }\n    }).then(result => {\n      console.log('>>>> mutate result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <Query\n        query={gql`\n          {\n            messages {\n              id\n              text\n              createdAt\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>\n          if (error) return <p>Error...</p>\n          return ( \n            <div>\n              <div>\n                <p>text</p>\n                <input type=\"text\" value={text} onChange={this.handleOnChangeText} />\n              </div>\n              <Button onClick={this.handleOnSave}>Save</Button>\n              {data.messages.map(({ id, text, createdAt }) => (\n                <MessageContainer key={id}>\n                  <p>{text}</p>\n                  <p>{createdAt}</p>\n                </MessageContainer>\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default graphql(createMessage)(Messages);\n\n","import React, { Component } from 'react';\n// import styled from 'styled-components';\nimport { graphql } from \"react-apollo\";\nimport { Button, Input, Field, Label, styled, Backdrop, Overlay } from 'reakit';\nimport { Link } from 'react-router-dom';\nimport { palette as p } from 'styled-tools';\nimport Cookie from 'js-cookie';\n\n// import Button from '../../components/common/Button';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { SIGN_IN } from '../../graphql/mutations';\nimport { GET_ME } from '../../graphql/queries';\nimport SidebarMenu from '../../components/SidebarMenu';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\n\nclass SignIn extends Component { \n\n  state = {\n    username: '',\n    password: '',\n  }\n\n  handleOnChange = type => e => {\n    this.setState({ [type]: e.target.value });\n  }\n\n  handleOnSignIn = () => {\n    const { mutate } = this.props;\n    const { username, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        password,\n      },\n      update: (cache, result) => {\n        const { data: { signIn: { me } } } = result;\n        // const data = { me };\n        console.log('>>> sign in update: ', { me });\n        cache.writeQuery({\n          query: GET_ME,\n          data: { me },\n        });\n      }\n    }).then(result => {\n      const { data: { signIn: { token, me } } } = result;\n      Cookie.set('token', token)\n      this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <ContentLayout>\n        <Overlay.Container>\n          {overlay => (\n            <Container>\n              <MyBackdrop visible={true} />\n              <MyOverlay fade slide {...overlay} visible={true}>\n                <h3>Sign In</h3>\n                <Field marginBottom=\"1rem\">\n                  <Input\n                    id=\"username\"\n                    placeholder=\"email or username\"\n                    value={username}\n                    onChange={this.handleOnChange('username')}\n                  />\n                </Field>\n                <Field marginBottom=\"1rem\">\n                  <Input\n                    id=\"password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={this.handleOnChange('password')}\n                  />\n                </Field>\n                <Button onClick={this.handleOnSignIn} primary>Sign In</Button>\n                <MyLink to=\"/\">go to home page</MyLink>\n              </MyOverlay>\n            </Container>\n          )}\n        </Overlay.Container>\n      </ContentLayout>\n    );\n  }\n}\n\nexport default graphql(SIGN_IN)(appConsumerWrapper(SignIn));\n\nconst MyLink = styled(Link)`\n  float: right;\n`;\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyOverlay = styled(Overlay)`\n  min-width: 300px;\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyBackdrop = styled(Backdrop)`\n  background-color: white;\n`;\n","import { ROLES } from '../constants';\nimport { map } from 'lodash';\n\n\nexport const getAccessByRoles = (me, rolesList) => {\n  if (!me) return false;\n  if (rolesList && !rolesList.includes(me.role)) return false;\n  return true;\n}\n\nexport const getRgba = (color, opacity) => {\n\n}","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { ROLES } from './constants';\nimport Home from './pages/Home';\nimport Games from './pages/Games';\nimport Admin from './pages/Admin';\nimport Agent from './pages/Agent';\nimport Schedule from './pages/Schedule';\nimport SignIn from './pages/SignIn';\nimport { getAccessByRoles } from './utils';\n\n\nconst Routes = ({ me }) => {\n  return (\n    <main>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route\n          path='/games'\n          component={Games}\n        />\n        <Route\n          path='/admin'\n          render={(props) => (\n            (getAccessByRoles(me, [ROLES.ADMIN]))\n              ? <Admin {...props} />\n              : <Redirect to=\"/sign-in\" />\n          )}\n        />\n        <Route\n          path='/agent'\n          render={(props) => (\n            (getAccessByRoles(me, [ROLES.AGENT, ROLES.ADMIN]))\n              ? <Agent {...props} />\n              : <Redirect to=\"/sign-in\" />\n          )}\n        />\n        <Route path='/schedule' component={Schedule}/>\n        <Route path='/sign-in' component={SignIn}/>\n      </Switch>\n    </main>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { get } from 'lodash';\n\nimport Header from './components/Header';\nimport Routes from './Routes';\nimport { GET_ME } from './graphql/queries';\nimport { GlobalStyle } from './components/common'\n\n\nconst App = () => (\n  <Query query={GET_ME} fetchPolicy=\"network-only\">\n    {({ client, loading, data }) => {\n      const me = get(data, ['me']);\n      return (\n        <div>\n          <Header me={me} />\n          <Routes me={me} />\n          <GlobalStyle />\n        </div>\n      );\n    }}\n  </Query>\n);\n\nexport default App;","import { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport Cookie from 'js-cookie';\n\nimport { errorParser } from './utils/errors';\n\n\nconst httpLink = createHttpLink({\n  uri: 'http://itkartell.ru:5000/graphql',\n  // uri: process.env.NODE_ENV === 'production'\n  //   ? 'http://itkartell.ru:5000/graphql'\n  //   : 'http://localhost:5000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = Cookie.get('token');\n  return {\n    headers: {\n      ...headers,\n      'Authorization': token ? token : '',\n    }\n  }\n});\n\nconst logLink = onError(({ graphQLErrors, networkError }) => {\n  const errorArr = errorParser({ graphQLErrors, networkError });\n  console.log('^^^^ errors handler: ', { graphQLErrors, networkError });\n  errorArr.map(err => {\n    if (err.statusCode === 401) {\n      Cookie.set('token', '');\n      window.location.href = '/sign-in';\n    }\n  })\n});\n\nexport default new ApolloClient({\n  link: logLink.concat(authLink.concat(httpLink)),\n  cache: new InMemoryCache(),\n});\n","export const errorParser = ({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    return graphQLErrors.map(err => {\n      switch (err.extensions.code) {\n        case 'UNAUTHENTICATED':\n          err.statusCode = 401;\n          break;\n        case 'FORBIDDEN':\n          err.statusCode = 403;\n          break;\n        default:\n          break;\n      }\n      return err;\n    });\n  }\n  return [networkError];\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\nimport { Provider } from 'reakit';\n// import theme from 'reakit-theme-default';\n\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport AppProvider from './wrappers/AppStore';\nimport client from './apolloClient';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <AppProvider>\n      <ApolloProvider client={client}>\n        <Provider theme={theme}>\n          <App />\n        </Provider>\n      </ApolloProvider>\n    </AppProvider>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n\nwindow.client = client;\nserviceWorker.unregister();\n"],"sourceRoot":""}