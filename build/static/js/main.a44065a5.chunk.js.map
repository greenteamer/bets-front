{"version":3,"sources":["constants.js","theme.js","graphql/queries/user.js","graphql/queries/sport.js","graphql/queries/odd.js","components/ProfileMenu/SidebarProfile.js","components/ProfileMenu/index.js","wrappers/AppStore.js","components/Header/index.js","components/Footer/index.js","components/common/Button/index.js","components/common/ButtonForm/index.js","components/common/Card/index.js","components/common/Wrapper/index.js","graphql/mutations/user.js","graphql/mutations/bet.js","pages/Games/Plate/PlateItem.js","pages/Games/utils.js","pages/Games/Plate/index.js","pages/Games/OddsTable.js","pages/Games/Odds.js","utils/css.js","utils/index.js","components/SidebarMenu/index.js","components/Layouts/ContentLayout.js","pages/Games/index.js","pages/Admin/CreateUserForm.js","pages/Admin/List.js","pages/Admin/index.js","pages/Agent/CreatePlayerForm.js","pages/Agent/PlayerItem.js","pages/Agent/PlayersList.js","pages/Agent/index.js","pages/Schedule/index.js","pages/SignIn/index.js","Routes.js","App.js","apolloClient.js","utils/errors.js","serviceWorker.js","index.js"],"names":["ROLES","ADMIN","AGENT","PLAYER","COLORS","white","iceBlue","lightGreyBlue","slate","shamrockGreen","black","colors","src_theme","Object","objectSpread","defaultTheme","palette","primary","secondary","Button","css","_templateObject","withProp","small","big","switchProp","transparent","_templateObject2","_templateObject3","_templateObject4","block","_templateObject5","inline-block","_templateObject6","BETS_FRAGMENT","gql","user_templateObject","PLAYERS_FRAGMENT","user_templateObject2","GET_USERS","user_templateObject3","GET_USER_PLAYERS","user_templateObject4","GET_ME","user_templateObject5","GET_SPORTS","sport_templateObject","GET_ODDS","odd_templateObject","SidebarProfile","_ref","me","onLogout","react_default","a","createElement","ProfileWrapper","Name","username","BillingInfo","SidebarProfile_InfoItem","title","value","balance","available","atRisk","ButtonS","onClick","HeadingS","as","map","bets","bet","index","MyCard","key","team","amount","InfoItem","_ref2","styled","SidebarProfile_templateObject","div","SidebarProfile_templateObject2","h2","SidebarProfile_templateObject3","SidebarProfile_templateObject4","SidebarProfile_templateObject5","SidebarProfile_templateObject6","p","Heading","_templateObject7","ProfileMenu","_this","this","props","handleLogout","Cookie","remove","refetch","data","ProfileContainer","es","Container","sidebar","HeaderElement","show","assign","fade","Sidebar","Hide","slide","align","HeaderLink","to","Component","ProfileMenu_templateObject","Link","ProfileMenu_templateObject2","span","ProfileMenu_templateObject3","withRouter","graphql","visibilityFilter","user","AppContext","React","createContext","appConsumerWrapper","Children","Consumer","context","AppProvider","state","setVisibilityFilter","setState","updateUserInfo","Provider","children","Header","role","get","HeaderContainer","HeaderName","Logo","Slogan","HeaderMenu","MainMenu","Header_HeaderLink","components_ProfileMenu","header","Header_templateObject","Header_templateObject2","Header_templateObject3","Header_templateObject4","Header_templateObject5","Header_templateObject6","Header_templateObject7","Footer","FooterContainer","footer","Footer_templateObject","Button_templateObject","Button_templateObject2","Button_templateObject3","ButtonForm","clearState","handleOnSuccess","popover","onSuccess","hide","handleOnCancel","onCancel","handleOnChange","e","target","_this2","_this$props","placeholder","relative","MyButton","Popover","Toggle","expand","hideOnClickOutside","Arrow","id","type","onChange","marginTop","ButtonForm_templateObject","Card_templateObject","Card_templateObject2","Card_templateObject3","Wrapper_templateObject","GlobalStyle","createGlobalStyle","Wrapper_templateObject2","SIGN_IN","mutations_user_templateObject","SIGN_UP","mutations_user_templateObject2","UPDATE_AVAILABLE","mutations_user_templateObject3","CREATE_BET","bet_templateObject","PlateItem","handleOnCreateBet","mutate","client","eventId","siteKey","oddType","oddIndex","root","cache","readQuery","query","console","log","variables","input","userId","creatorId","parseInt","then","result","createBet","catch","error","_this$props2","h2h","top","PlateItem_MyCard","template","Item","area","PlateItem_Logo","MyTitle","PlateItem_MyButton","common_ButtonForm","Grid","PlateItem_templateObject","PlateItem_templateObject2","PlateItem_templateObject3","img","PlateItem_templateObject4","PlateItem_templateObject5","withApollo","formatUS","val","rateUSToFixed","Number","toFixed","concat","Plate","odd","theme","gutter","teams","commenceTime","homeTeam","commence_time","sites","formatH2H","values","MyGrid","gap","Time","moment","format","Plate_PlateItem","site_key","Hr","withTheme","Plate_templateObject","Plate_templateObject2","Plate_templateObject3","OddsTable","odds","length","OddsTable_Wrapper","sport_nice","MyGridItem","left","Label","right","backgroundColor","Games_Plate","Wrapper","OddsTable_templateObject","Overlay","OddsTable_templateObject2","OddsTable_templateObject3","OddsTable_templateObject4","Odds","groupName","react_apollo_browser_umd","sport_key","loading","Odds_Wrapper","Games_OddsTable","Odds_templateObject","Odds_templateObject2","sizes","media","css_templateObject2","apply","arguments","css_templateObject3","css_templateObject4","getAccessByRoles","rolesList","includes","Menu","match","tree","SidebarWrapper","SidebarMenu_HeadingS","color","keys","item","hidden","MenuButton","HiddenS","obj","SidebarMenu_MenuButton","LinkS","url","display","Navigation","SidebarMenu_templateObject","SidebarMenu_templateObject2","SidebarMenu_templateObject3","SidebarMenu_templateObject4","SidebarMenu_templateObject5","SidebarMenu_templateObject6","SidebarMenu_templateObject7","Hidden","_templateObject8","Fragment","ContentWrapper","ContentLayout_templateObject","ContentLayout_templateObject2","Games","sports","mapSports","s","group","groupBy","Layouts_ContentLayout","SidebarMenu","Route","path","component","exact","render","CreatePlayerForm","email","password","handleOnAddPlayer","_this$state","signUp","onHide","handleOnChangeInput","name","defineProperty","_this$state2","marginBottom","CreateUserForm_templateObject","PlayerRaw","player","style","padding","PlayersList","toggleForm","showForm","fetchPolicy","users","overlay","Show","List_MyOverlay","CreateUserForm","List_PlayerRaw","MyOverlay","List_templateObject","Agent","List","agentId","update","newPlayer","writeQuery","players","CreatePlayerForm_Container","CreatePlayerForm_templateObject","PlayerItem","handleOnUpdateAvailable","PlayerItem_MyCard","PlayerItem_MyTitle","PlayerItem_MyButton","PlayerItem_templateObject","PlayerItem_templateObject2","PlayerItem_templateObject3","PlayerItem_templateObject4","PlayersList_MyOverlay","Agent_CreatePlayerForm","PlayersList_MyGridItem","PlayersList_Label","center","ListContainer","Agent_PlayerItem","PlayersList_templateObject","PlayersList_templateObject2","PlayersList_templateObject3","PlayersList_templateObject4","MessageContainer","Schedule_templateObject","createMessage","Schedule_templateObject2","Messages","text","handleOnChangeText","handleOnSave","Schedule_templateObject3","messages","createdAt","SignIn","handleOnSignIn","signIn","_result$data$signIn","token","set","history","push","SignIn_Container","MyBackdrop","visible","SignIn_MyOverlay","MyLink","SignIn_templateObject","SignIn_templateObject2","SignIn_templateObject3","Backdrop","SignIn_templateObject4","Routes","Main","Switch","Redirect","Admin","pages_Agent","Schedule","main","Routes_templateObject","App","components_Header","src_Routes","components_Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","Authorization","logLink","onError","graphQLErrors","networkError","errorArr","err","extensions","code","statusCode","errorParser","window","location","href","apolloClient","ApolloClient","link","InMemoryCache","Boolean","hostname","ReactDOM","BrowserRouter","AppStore_AppProvider","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a44065a5.chunk.js","sourcesContent":["export const ROLES = {\n  ADMIN: 'ADMIN',\n  AGENT: 'AGENT',\n  PLAYER: 'PLAYER',\n};\n\nexport const COLORS = {\n  white: 'white',\n  iceBlue: '#eef1f4',\n  lightGreyBlue: '#aeb8c7',\n  slate: '#455266',\n  shamrockGreen: '#00cf4f',\n  black: '#1b1b1b',\n}\n\n// export const theme = {\n//   colors: {\n//     primary: COLORS.slate,\n//     secondary: COLORS.shamrockGreen,\n//   }\n// }\n","import { css } from \"reakit\";\nimport defaultTheme from \"reakit-theme-default\";\nimport { prop, palette as p, switchProp, withProp } from 'styled-tools';\nimport { COLORS } from './constants';\n\nexport const colors = COLORS;\n\nexport default {\n  ...defaultTheme,\n\n  palette: {\n    ...defaultTheme.palette,\n\n    slate: colors.slate,\n    lightGreyBlue: colors.lightGreyBlue,\n    iceBlue: colors.iceBlue,\n    shamrockGreen: colors.shamrockGreen,\n\n    primary: [colors.slate, colors.lightGreyBlue, colors.iceBlue],\n    secondary: [colors.shamrockGreen],\n\n  },\n\n  Button: css`\n    ${defaultTheme.Button};\n    transition: box-shadow 0.3s;\n    height: ${withProp([\"small\", \"big\"], (small, big) => small ? '3rem' : big ? '5rem' : '4rem')};\n    ${switchProp(\n      \"palette\",\n      {\n        transparent: css`\n          background-color: transparent;\n          color: ${colors.black};\n        `,\n        primary: css`\n          background-color: ${colors.slate};\n        `,\n        secondary: css`\n          background-color: ${colors.shamrockGreen};\n        `,\n      },\n    )};\n    ${switchProp(\n      \"display\",\n      {\n        block: css`\n          display: block;\n        `,\n        \"inline-block\": css`\n          display: inline-block;\n        `,\n      },\n    )};\n  `,\n\n}","import gql from \"graphql-tag\";\n\nexport const BETS_FRAGMENT = gql`\n  fragment UserBets on User {\n    bets {\n      id\n      amount\n      team\n    }\n  }\n`;\n\nexport const PLAYERS_FRAGMENT = gql`\n  fragment UserPlayers on User {\n    players {\n      id\n      agentId\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n    }\n  }\n  ${BETS_FRAGMENT}\n`;\n\nexport const GET_USERS = gql`\n  { \n    users {\n      id\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n    }\n  }\n  ${BETS_FRAGMENT}\n`;\n\nexport const GET_USER_PLAYERS = gql`\n  { \n    me {\n      id\n      agentId\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n      ...UserPlayers\n    }\n  }\n  ${PLAYERS_FRAGMENT}\n  ${BETS_FRAGMENT}\n`;\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      agentId\n      username\n      email\n      role\n      balance\n      available\n      atRisk\n      ...UserBets\n      ...UserPlayers\n    }\n  }\n  ${PLAYERS_FRAGMENT}\n  ${BETS_FRAGMENT}\n`;\n\n","import gql from \"graphql-tag\";\n\n\nexport const GET_SPORTS = gql`\n  {\n    sports {\n      id\n      key\n      active\n      group\n      details\n      title\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n\nexport const GET_ODDS = gql`\n  query ($sport_key:String!) {\n    odds(sport_key:$sport_key) {\n      id\n      sport_key\n      sport_nice\n      teams\n      commence_time\n      home_team\n      sites {\n        site_key\n        site_nice\n        last_update\n        odds {\n          h2h\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Cookie from 'js-cookie';\nimport { graphql } from \"react-apollo\";\nimport { styled, Block, Button, Backdrop, Sidebar, Heading } from \"reakit\";\nimport { palette as p } from 'styled-tools';\nimport { map } from 'lodash';\n\n\nexport default ({ me, onLogout }) => (\n  <ProfileWrapper>\n    <Name>{me.username}</Name>\n    <BillingInfo>\n      <InfoItem title=\"Balance\" value={me.balance} />\n      <InfoItem title=\"Available\" value={me.available} />\n      <InfoItem title=\"At Risk\" value={me.atRisk} />\n    </BillingInfo>\n    <ButtonS onClick={onLogout}>Logout</ButtonS>\n    <div>\n      <HeadingS as=\"h4\">Your bets</HeadingS>\n      {map(me.bets, (bet, index) => (\n        <MyCard key={index} block>\n          <div>{bet.team}</div>\n          <div>{bet.amount} $</div>\n        </MyCard>\n      ))}\n    </div>\n  </ProfileWrapper>\n);\n\nconst InfoItem = ({ title, value }) => (\n  <div>{title}: {value}</div>\n);\n\nconst ButtonS = styled(Button)`\n  width: 100%;\n`;\nconst ProfileWrapper = styled.div`\n  min-width: 30rem;\n  padding: 1rem;\n`;\nconst Name = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n`;\nconst BillingInfo = styled.div`\n  padding: 1rem;\n  margin: 1rem 0;\n`;\nconst BillingItem = styled.div`\n`;\n\nconst MyCard = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background-color: ${p('iceBlue')};\n`;\n\nconst HeadingS = styled(Heading)`\n  margin-top: 2rem!important;\n  text-align: center;\n`;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport Cookie from 'js-cookie';\nimport { graphql } from \"react-apollo\";\nimport { Block, Button, Backdrop, Sidebar } from \"reakit\";\n\nimport { GET_ME } from '../../graphql/queries'\nimport SidebarProfile from './SidebarProfile';\n\n\nclass ProfileMenu extends Component {\n  render() {\n    const { me } = this.props;\n    const handleLogout = () => {\n      Cookie.remove('token');\n      const { data: { refetch } } = this.props;\n      refetch();\n    }\n    if (me) {\n      return (\n        <ProfileContainer>\n          <Sidebar.Container>\n            {sidebar => (\n              <Block>\n                {/* <Button as={Sidebar.Show} {...sidebar}> */}\n                <HeaderElement\n                  onClick={sidebar.show}>\n                  Profile\n                </HeaderElement>\n                {/* </Button> */}\n                <Backdrop fade as={Sidebar.Hide} {...sidebar} />\n                <Sidebar slide align=\"right\" {...sidebar}>\n                  <SidebarProfile me={me} onLogout={handleLogout} />\n                </Sidebar>\n              </Block>\n            )}\n          </Sidebar.Container>\n        </ProfileContainer>\n      )\n    }\n    return (\n      <ProfileContainer>\n        <HeaderLink to=\"/sign-in\">Sing In</HeaderLink>\n      </ProfileContainer>\n    )\n  }\n}\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  color: white;\n`;\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n`;\n\nconst HeaderElement = styled.span`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\n\nexport default withRouter(graphql(GET_ME)(ProfileMenu))","import React from \"react\"\n\nconst value = {\n  visibilityFilter: \"SHOW_ALL\",\n  user: null,\n}\n\nexport const AppContext = React.createContext(value);\n\nexport const appConsumerWrapper = Children => props => (\n  <AppContext.Consumer>\n    {context => \n      <Children {...props} {...context} />\n    }\n  </AppContext.Consumer>\n);\n\nexport default class AppProvider extends React.Component {\n  state = value\n\n  setVisibilityFilter = visibilityFilter => {\n    this.setState({ visibilityFilter })\n  }\n\n  updateUserInfo = user => {\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n\n          visibilityFilter: this.state.visibilityFilter,\n          setVisibilityFilter: this.setVisibilityFilter,\n\n          // user info\n          user: this.state.user,\n          updateUserInfo: this.updateUserInfo,\n\n        }}>\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\nimport { get } from 'lodash';\n\nimport ProfileMenu from '../ProfileMenu';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { ROLES } from '../../constants';\n\n\nclass Header extends Component {\n\n  render() {\n    const { me } = this.props;\n    const role = get(me, ['role'])\n\n    return (\n      <HeaderContainer>\n        <HeaderName>\n          <Logo>Positive Bets</Logo>\n          <Slogan>Make bets is easy as posible</Slogan>\n        </HeaderName>\n        <HeaderMenu>\n          <MainMenu>\n            <HeaderLink to=\"/\">\n              Home\n            </HeaderLink>\n            <HeaderLink to=\"/games\">\n              Games\n            </HeaderLink>\n            {role === ROLES.ADMIN &&\n              <HeaderLink to=\"/admin\">\n                Admin\n              </HeaderLink>\n            }\n            {role === ROLES.AGENT &&\n              <HeaderLink to=\"/agent\">\n                Agent\n              </HeaderLink>\n            }\n          </MainMenu>\n          <ProfileMenu me={me} />\n        </HeaderMenu>\n      </HeaderContainer>\n    )\n  }\n}\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  padding: 1rem;\n  justify-content: space-between;\n  background: ${p('slate')};\n  color: white;\n`;\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n`;\n\nconst HeaderMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst MainMenu = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst HeaderName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  font-size: 3.5rem;\n`;\n\nconst Slogan = styled.div`\n  display: flex;\n  align-self: flex-start;\n`;\n\nexport default withRouter(appConsumerWrapper(Header))","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { get } from 'lodash';\n\nimport ProfileMenu from '../ProfileMenu';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { ROLES } from '../../constants';\nimport { colors } from '../../theme';\n\n\nclass Footer extends Component {\n  render() {\n\n    return (\n      <FooterContainer>\n        Footer\n      </FooterContainer>\n    )\n  }\n}\n\nconst FooterContainer = styled.footer`\n  display: flex;\n  padding: 1rem;\n  justify-content: space-between;\n  background: ${colors.slate};\n  color: white;\n`;\n\nexport default Footer;","import React from 'react';\nimport { styled, css, Button } from 'reakit';\nimport { switchProp } from 'styled-tools';\nimport { colors } from '../../../theme';\n\n\n// export default styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   transition: box-shadow 0.5s;\n//   box-shadow: 1px 2px 20px rgba(0,0,0,0.1);\n//   border-radius: 10rem;\n//   padding: 0.5rem 2rem;\n//   ${props => props.primary && css`\n//     background: #376f9a;\n//     color: white;\n//   `};\n//   &:hover {\n//     cursor: pointer;\n//     box-shadow: 1px 2px 20px rgba(0,0,0,0.2);\n//   }\n//   {...props}\n// `;\n\n// { small, big, primary, secondary, outlined, ...props}\n\nexport default styled(Button)`\n  display: block;\n  text-align: left;\n  width: 100%;\n  height: 3rem;\n  line-height: 3rem;\n  background-color: ${props => props.secondary ? colors.secondary : colors.slate};\n  /* ${switchProp('palette', {\n    primary: css`\n      background-color: ${colors.shamrockGreen};\n    `,\n    secondary: css`\n      background-color: ${colors.slate};\n    `\n  })} */\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Popover,\n  Block,\n  Field,\n  Input,\n  Group,\n} from 'reakit';\nimport { palette as p } from 'styled-tools';\n\n\nclass ButtonForm extends React.Component { \n  state = {\n    value: '',\n  }\n\n  clearState = () => {\n    this.setState({ value: '' });\n  }\n\n  handleOnSuccess = popover => () => {\n    const { value } = this.state;\n    const { onSuccess } = this.props;\n    onSuccess(value);\n    this.clearState();\n    popover.hide();\n  }\n \n\n  handleOnCancel = popover => () => {\n    const { onCancel } = this.props;\n    onCancel();\n    this.clearState();\n    popover.hide();\n  }\n\n  handleOnChange = e => {\n    const { value } = e.target;\n    this.setState({ value });\n  }\n\n  render() { \n    const { children, placeholder } = this.props;\n    const { value } = this.state;\n    return (\n      <Popover.Container>\n        {popover => (\n          <Block relative>\n            <MyButton as={Popover.Toggle} {...popover}>\n              {children}\n            </MyButton>\n            <Popover fade slide expand hideOnClickOutside {...popover}>\n              <Popover.Arrow />\n              <Block>\n                <Field>\n                  <Input\n                    id=\"input1\"\n                    type=\"number\"\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={this.handleOnChange}\n                  />\n                </Field>\n                <Group marginTop={8}>\n                  <Button palette=\"secondary\" onClick={this.handleOnSuccess(popover)}>Ok</Button>\n                  <Button palette=\"transparent\" onClick={this.handleOnCancel(popover)}>Cancel</Button>\n                </Group>\n              </Block>\n            </Popover>\n          </Block>\n        )}\n      </Popover.Container>\n    );\n  }\n}\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default ButtonForm;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { COLORS } from '../../../constants';\n\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 1px 2px 50px rgba(0,0,0,0.1);\n`;\n\nexport const CardHeader = styled.div`\n  text-align: center;\n  border-bottom: 1px solid #c8e0f5;\n  padding: 1rem;\n  font-size: 2rem;\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { COLORS } from '../../../constants';\n\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  background-color: ${COLORS.iceBlue};\n  padding: 2rem;\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    @import url('https://fonts.googleapis.com/css?family=Rubik:300,400,500');\n    font-family: 'Rubik', sans-serif;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-size: 8px;\n  }\n\n  * {\n    box-sizing: border-box; \n  }\n\n  body {\n    display: flex;\n    min-height: 100vh;\n    margin: 0;\n  }\n\n  #root {\n    display: flex;\n    flex: 1;\n    min-height: 100vh;\n    flex-direction: column;\n    margin: 0;\n  }\n\n  body, a, p, span {\n    font-size: 1.75rem;\n  }\n\n  h1 {\n    font-weight: 400;\n  }\n`\n","import gql from \"graphql-tag\";\n\n\nexport const SIGN_IN = gql`\n  mutation ($username: String!, $password: String!) {\n    signIn(login: $username, password: $password) {\n      token\n      me {\n        id\n        agentId\n        username\n        email\n        role\n        players {\n          id\n          agentId\n          email\n          username\n          role\n        }\n      }\n    }\n  }\n`;\n\n\nexport const SIGN_UP = gql`\n  mutation ($username: String!, $email: String!, $password: String!, $role: String!, $agentId: ID) {\n    signUp(username: $username, email: $email, password: $password, role: $role, agentId: $agentId) {\n      id\n      username\n      email\n      role\n      agentId\n    }\n  }\n`;\n\nexport const UPDATE_AVAILABLE = gql`\n  mutation ($input: UpdateAvailableInput!) {\n    updateAvailable(input: $input) {\n      id\n      available\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n\nexport const CREATE_BET = gql`\n  mutation ($input: CreateBetInput!) {\n    createBet(input: $input) {\n      id\n      available\n      bets {\n        id\n        amount\n        team\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Block,\n  Grid,\n} from 'reakit';\nimport { palette as p } from 'styled-tools';\nimport { graphql, withApollo } from 'react-apollo';\nimport { get } from 'lodash';\n\nimport { ButtonForm } from '../../../components/common';\nimport { CREATE_BET } from '../../../graphql/mutations';\nimport { GET_ME } from '../../../graphql/queries';\n\n\nconst template = `\n  \"a b c d e\" 40px / 40px 1fr 120px 120px 120px\n`;\n\nclass PlateItem extends React.Component { \n\n  handleOnCreateBet = value => {\n    const { mutate, client, eventId, siteKey, oddType, oddIndex, team } = this.props;\n    const root = client.cache.readQuery({ query: GET_ME });\n    const me = get(root, ['me']);\n    console.log('>>> handleOnCreateBet props: ', { mutate, client, me });\n    if (!me) {\n      console.log('>>> Error when getting me from cache');\n      return;\n    }\n\n    const input = {\n      userId: me.id,\n      creatorId: me.id,\n      amount: parseInt(value, 10),\n      eventId,\n      siteKey,\n      oddType,\n      oddIndex,\n      team,\n    }\n\n    mutate({\n      variables: {\n        input,\n      },\n    }).then(result => {\n      const { data: { createBet } } = result;\n      console.log('>>>> create bet mutation result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() { \n    const { team, h2h, top } = this.props;\n    return (\n      <MyCard template={template} top={top}>\n        <Grid.Item area=\"a\">\n          <Logo>Logo</Logo>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <MyTitle>{team}</MyTitle>\n        </Grid.Item>\n        <Grid.Item area=\"c\">\n          <MyButton>{0}</MyButton>\n        </Grid.Item>\n        <Grid.Item area=\"d\">\n          <MyButton>{0}</MyButton>\n        </Grid.Item>\n        <Grid.Item area=\"e\">\n          <ButtonForm\n            placeholder=\"0\"\n            onSuccess={this.handleOnCreateBet}\n            onCancel={value => console.log('&&& on cancel: ', { value })}\n          >\n            {h2h}\n          </ButtonForm>\n        </Grid.Item>\n      </MyCard>\n    );\n  }\n}\n\n\nconst MyCard = styled(Grid)`\n  align-items: center;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.top ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.top ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.top ? 0 : '0.5rem'};\n  border-bottom-right-radius: ${props => props.top ? 0 : '0.5rem'};\n  &:hover {\n    box-shadow: 0 0 1px rgba(0,0,0,0.5); \n  }\n`;\n\nconst MyTitle = styled.div`\n  margin-left: 1rem;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.25rem;\n  padding: 1rem;\n  color: ${p('slate')};\n`;\n\nconst MyImage = styled.img`\n  border-top-left-radius: ${props => props.top ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.top ? 0 : '0.5rem'};\n`;\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default withApollo(graphql(CREATE_BET)(PlateItem));","import { map } from 'lodash';\n\n\nexport const formatUS = val => {\n  if (val < 2) {\n    const del = val - 1;\n    const rateUS = 1 / del * 100;\n    const rateUSToFixed = Number((rateUS).toFixed(0));\n    return `-${rateUSToFixed}`;\n  }\n  const rateUSToFixed = Number((val * 100 - 100).toFixed(0));\n  return `+${rateUSToFixed}`;\n}","import React from 'react';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\nimport moment from 'moment';\nimport { map, get } from 'lodash';\n\nimport PlateItem from './PlateItem';\nimport { ButtonForm } from '../../../components/common';\nimport { formatUS } from '../utils';\n\n\nclass Plate extends React.Component {\n  render() {\n    const { theme, gutter, odd } = this.props;\n    const { teams, homeTeam, commence_time: commenceTime, sites, h2h, id } = odd;\n\n    console.log('>>> Odd(event) id: ', { odd });\n\n    const formatH2H = odd => {\n      const sites = get(odd, ['sites']);\n      const values = get(sites[0], ['odds', 'h2h']);\n      return map(values, formatUS);\n    }\n\n    const template = `\n      \"a b\" auto / 120px auto\n    `;\n    return (\n      <MyGrid template={template} gap=\"16px\">\n        <Grid.Item area=\"a\">\n          <Time>\n            <div>\n              {moment(commenceTime * 1000).format('MMM DD')}\n            </div>\n            <div>\n              {moment(commenceTime * 1000).format('h:mm a')}\n            </div>\n          </Time>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <PlateItem\n            eventId={odd.id}\n            siteKey={sites[0].site_key}\n            oddType=\"h2h\"\n            oddIndex={0}\n            team={teams[0]}\n            h2h={formatH2H(odd)[0]}\n            top\n          />\n          <Hr />\n          <PlateItem\n            eventId={odd.id}\n            siteKey={sites[0].site_key}\n            oddType=\"h2h\"\n            oddIndex={1}\n            team={teams[1]}\n            h2h={formatH2H(odd)[1]}\n          />\n        </Grid.Item>\n      </MyGrid>\n    );\n  }\n}\n\nexport default withTheme(Plate);\n\nconst Time = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100%;\n  flex-direction: column;\n  background-color: ${p('white')};\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.5rem;\n  /* height: 100%; */\n`;\n\nconst MyGrid = styled(Grid)`\n  margin-bottom: 2rem;\n`;\n\nconst Hr = styled.div`\n  height: 1px;\n  width: 100%;\n  margin: 0;\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme, Heading } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_ODDS } from '../../graphql/queries';\nimport Plate from './Plate';\nimport { formatUS } from './utils';\n\n\nclass OddsTable extends React.Component {\n\n  render() {\n    const { theme, odds } = this.props;\n    const groupName = get(this.props, ['match', 'params', 'groupName']);\n    const template = `\n      \"a a1 ab ac ad\" auto\n      \"c c c c c\" auto / 136px auto 120px 120px 120px\n    `;\n    if (odds.length === 0) return <p>no odds</p>;\n    return (\n      <Wrapper>\n        <Heading as=\"h4\">{ odds[0].sport_nice }</Heading>\n        <Grid template={template} gap=\"16px 0\">\n          <MyGridItem area=\"a\" left><Label>Date 1</Label></MyGridItem>\n          <MyGridItem area=\"a1\"></MyGridItem>\n          <MyGridItem area=\"ab\"><Label>Spread</Label></MyGridItem>\n          <MyGridItem area=\"ac\"><Label>Total</Label></MyGridItem>\n          <MyGridItem area=\"ad\" right><Label>M Line</Label></MyGridItem>\n          <Grid.Item area=\"c\" backgroundColor={theme.palette.iceBlue}>\n            {map(odds, (odd, index) => (\n              <Plate\n                key={index}\n                gutter=\"1rem 0\"\n                odd={odd}\n              />\n            ))}\n          </Grid.Item>\n        </Grid>\n      </Wrapper>\n    );\n  }\n}\n\nexport default withTheme(OddsTable);\n\nconst Wrapper = styled.div`\n  flex: 1;\n`;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyGridItem = styled(Grid.Item)`\n  padding: 0.5rem 0;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.right ? '0.5rem' : 0};\n  border-bottom-right-radius: ${props => props.right ? '0.5rem' : 0};\n`;\n\nconst Label = styled.div`\n  text-align: center;\n  /* justify-items: center; */\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_ODDS } from '../../graphql/queries';\nimport Plate from './Plate';\nimport { formatUS } from './utils';\nimport OddsTable from './OddsTable';\n\n\nclass Odds extends React.Component {\n  render() {\n    const groupName = get(this.props, ['match', 'params', 'groupName']);\n    return (\n      <Query query={GET_ODDS} variables={{ sport_key: groupName }}>\n        {({ loading, client, data }) => {\n          const odds = get(data, ['odds']);\n          if (!odds) return <div>Loading....</div>;\n          return (\n            <Wrapper>\n              <OddsTable odds={odds} />\n            </Wrapper>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Odds;\n\nconst Wrapper = styled.div`\n  flex: 1;\n`;\n\nconst Item = styled.div`\n  background: darkorange;\n  text-align: center;\n  padding: 50px;\n  color: white;\n`\nfunction CarouselItem(props) {\n  return (\n    <Item>Item {props.index} of {props.numSlides}</Item>\n  )\n}","import React from 'react';\nimport { css } from 'reakit';\nimport Responsive from 'react-responsive';\n\nexport const sizes = {\n  giant: 1170,\n  desktop: 992,\n  tablet: 768,\n  mobile: 376,\n}\n\nexport const media = {\n  default: (...args) => css`\n    @media (min-width: ${sizes.tablet}px) {\n      ${css(...args)};\n    }\n  `,\n  desktop: (...args) => css`\n    @media (min-width: ${sizes.desktop}px) {\n      ${css(...args)};\n    }\n  `,\n  tablet: (...args) => css`\n    @media (min-width: ${sizes.tablet}px) and (max-width: ${sizes.desktop - 1}) {\n      ${css(...args)};\n    }\n  `,\n  mobile: (...args) => css`\n    @media (max-width: ${sizes.mobile - 1}px) {\n      ${css(...args)};\n    }\n  `,\n}\n\n// export const Giant = props => <Responsive {...props} minWidth={sizes.desktop + 1} />;\nexport const Default = props => <Responsive {...props} minWidth={sizes.tablet} />;\nexport const Desktop = props => <Responsive {...props} minWidth={sizes.desktop} />;\nexport const Tablet = props => <Responsive {...props} minWidth={sizes.tablet} maxWidth={sizes.desktop - 1} />;\nexport const Mobile = props => <Responsive {...props} maxWidth={sizes.mobile - 1} />;","import { ROLES } from '../constants';\nimport { map } from 'lodash';\n\nexport { media, sizes, Default, Desktop, Tablet, Mobile } from './css';\n\n\nexport const getAccessByRoles = (me, rolesList) => {\n  if (!me) return false;\n  if (rolesList && !rolesList.includes(me.role)) return false;\n  return true;\n}\n\nexport const getRgba = (color, opacity) => {\n\n}","import React from 'react';\nimport { styled, Button, Box, Navigation, List, Heading, Hidden, Block } from 'reakit';\nimport { palette as p, prop } from 'styled-tools';\nimport { Link } from 'react-router-dom'\nimport { map } from 'lodash';\n\n// import { Button } from '../../components/common';\nimport { colors } from '../../theme';\nimport { media, Mobile } from '../../utils';\n\n\nconst Menu = ({ match, tree }) => {\n  return (\n    <SidebarWrapper>\n      <HeadingS as=\"h4\" color={colors.black}>Games Panel</HeadingS>\n      <List>\n        {map(Object.keys(tree), item => (\n          <Hidden.Container key={item}>\n            {hidden => (\n              <li>\n                <Hidden.Toggle as={MenuButton} {...hidden}>{item}</Hidden.Toggle>\n                <HiddenS {...hidden}>\n                  {map(tree[item], (obj, index) => (\n                    <MenuButton key={index}><LinkS to={obj.url}>{obj.title}</LinkS></MenuButton>\n                  ))}\n                </HiddenS>\n              </li>\n            )}\n          </Hidden.Container>\n        ))}\n      </List>\n    </SidebarWrapper>\n  );\n}\n\nexport default Menu;\n\nconst MenuButton = (props) => (\n  <Button display=\"block\" palette=\"transparent\" small {...props} />\n)\n\nconst SidebarWrapper = styled(Navigation)`\n  padding: 1rem;\n  flex: 0 0 20vw;\n  background-color: ${p('white')};\n  /* ${media.desktop`background-color: ${p('primary', -1)}`}\n  ${media.tablet`background-color: ${p('primary', -2)}`}\n  ${media.mobile`background-color: ${p('secondary', 0)}`} */\n`;\n\nconst HeadingS = styled(Heading)`\n  color: ${p('blackText')};\n`;\n\nconst LinkS = styled(Link)`\n  color: ${p('whiteText')};\n  text-decoration: none;\n`;\n\nconst LinkEmpty = styled.a`\n  display: block;\n  padding: 0.5rem;\n  color: ${p('blackText')};\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst HiddenS = styled(Hidden)`\n  padding: 1rem;\n`;","import React from 'react';\nimport { styled, Block, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport SidebarMenu from '../SidebarMenu';\nimport { media, Mobile } from '../../utils';\n\n\nconst ContentLayout = ({ theme, children, sidebar }) => { \n  return (\n    <React.Fragment>\n      {sidebar}\n      <ContentWrapper backgroundColor={theme.palette.iceBlue}>\n        {children}\n      </ContentWrapper>\n    </React.Fragment>\n  );\n}\n\nexport default withTheme(ContentLayout);\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex: auto;\n  padding: 2rem;\n  background-color: ${p('iceBlue')};\n`;","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Query } from 'react-apollo';\nimport { get, groupBy, map } from 'lodash';\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n// import Slider from 'react-styled-carousel';\n\n\nimport { GET_SPORTS } from '../../graphql/queries';\nimport Odds from './Odds';\nimport SidebarMenu from '../../components/SidebarMenu';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\n\nconst Games = ({ match }) => (\n  <Query query={GET_SPORTS}>\n    {({ loading, client, data }) => { \n      const sports = get(data, ['sports']);\n      const mapSports = map(sports, s => ({ group: s.group, title: s.title, url: `/games/${s.key}` }));\n      const tree = groupBy(mapSports, 'group');\n      return (\n        <ContentLayout\n          sidebar={<SidebarMenu match={match} tree={tree} />}\n        >\n          <Route path={`${match.path}/:groupName`} component={Odds} />\n          <Route\n            exact\n            path={match.path}\n            render={() => <h3>Please select a page.</h3>}\n          />\n        </ContentLayout>\n      );\n    }}\n  </Query>\n);\n\nexport default Games;","import React from 'react';\nimport { graphql } from \"react-apollo\";\nimport { get } from 'lodash';\nimport { Button, Input, Field, Label, styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { SIGN_UP } from '../../graphql/mutations';\nimport { GET_USER_PLAYERS, GET_ME } from '../../graphql/queries';\nimport { ROLES } from '../../constants'\n\n\nclass CreatePlayerForm extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  }\n\n  handleOnAddPlayer = () => {\n    const { mutate, me } = this.props;\n    console.log('>>>> handle on add user me: ', { me });\n    const { username, email, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        email,\n        password,\n        role: ROLES.AGENT,\n        // agentId: me.id,\n      },\n      // update: (cache, { data }) => {\n      //   const newPlayer = get(data, ['signUp']);\n      //   const root = cache.readQuery({ query: GET_ME })\n      //   cache.writeQuery({\n      //     query: GET_ME,\n      //     data: {\n      //       me: {\n      //         ...root.me,\n      //         players: root.me.players.concat([newPlayer]),\n      //       },\n      //     },\n      //   });\n      // }\n    }).then(result => {\n      const { data: { signUp } } = result;\n      const { onHide } = this.props;\n      onHide();\n      // this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  handleOnChangeInput = (name) => (e) => {\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <Container>\n        <h3>Create Player</h3>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={this.handleOnChangeInput('username')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleOnChangeInput('email')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleOnChangeInput('password')}\n          />\n        </Field>\n        <Button onClick={this.handleOnAddPlayer} primary>Create</Button>\n      </Container>\n    )\n  }\n}\n\nexport default graphql(SIGN_UP)(CreatePlayerForm);\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Button, Overlay, Block, Backdrop } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_USERS } from '../../graphql/queries';\nimport CreateUserForm from './CreateUserForm';\n\n\nconst PlayerRaw = ({ player }) => (\n  <div key={player.id} style={{ backgroundColor: '#eaeaea', padding: '3px', marginBottom: '3px' }}>\n    <div>{player.username}</div>\n    <div>{player.email}</div>\n  </div>\n);\n\nclass PlayersList extends React.Component {\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.showForm,\n    });\n  }\n\n  render() {\n    console.log('**** Player List props: ', { props: this.props });\n    return (\n      <Query query={GET_USERS} fetchPolicy=\"network-only\">\n        {({ loading, client, data }) => {\n          const users = get(data, ['users']);\n          const me = get(data, ['me']);\n          if (!users) return <div>Loading....</div>;\n          return (\n            <div>\n              <h3>Add user</h3>\n              <Overlay.Container>\n                {overlay => (\n                  <Block>\n                    <Button as={Overlay.Show} {...overlay}>Add</Button>\n                    <Backdrop fade as={Overlay.Hide} {...overlay} />\n                    <MyOverlay fade slide {...overlay}>\n                      <CreateUserForm me={me} onHide={overlay.hide} />\n                    </MyOverlay>\n                  </Block>\n                )}\n              </Overlay.Container>\n              <h3>User list {users.length}</h3>\n              {map(users, user => (\n                <PlayerRaw player={user} key={user.id} />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default PlayersList;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../../components/SidebarMenu';\nimport List from './List';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\nconst template = `\n  \"b c c\" minmax(200px, 1fr)\n  \"d d d\" 100px / 1fr 2fr 2fr\n`;\n\nconst tree = {\n  users: [\n    {\n      title: 'list',\n      url: '/admin/users',\n    },\n  ],\n}\n\nconst Agent = ({ match }) => (\n  <ContentLayout\n    sidebar={<SidebarMenu match={match} tree={tree} />}\n  >\n    <Route path={`${match.path}/users`} component={List} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a page.</h3>}\n    />\n  </ContentLayout>\n);\n\nexport default Agent;","import React from 'react';\nimport { graphql } from \"react-apollo\";\nimport { get } from 'lodash';\nimport { Button, Input, Field, Label, styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { SIGN_UP } from '../../graphql/mutations';\nimport { GET_USER_PLAYERS, GET_ME } from '../../graphql/queries';\nimport { ROLES } from '../../constants'\n\n\nclass CreatePlayerForm extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  }\n\n  handleOnAddPlayer = () => {\n    const { mutate, me } = this.props;\n    const { username, email, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        email,\n        password,\n        role: ROLES.PLAYER,\n        agentId: me.id,\n      },\n      update: (cache, { data }) => {\n        const newPlayer = get(data, ['signUp']);\n        const root = cache.readQuery({ query: GET_ME })\n        cache.writeQuery({\n          query: GET_ME,\n          data: {\n            me: {\n              ...root.me,\n              players: root.me.players.concat([newPlayer]),\n            },\n          },\n        });\n      }\n    }).then(result => {\n      const { data: { signUp } } = result;\n      const { onHide } = this.props;\n      onHide();\n      // this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  handleOnChangeInput = (name) => (e) => {\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <Container>\n        <h3>Create Player</h3>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={this.handleOnChangeInput('username')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleOnChangeInput('email')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleOnChangeInput('password')}\n          />\n        </Field>\n        <Button onClick={this.handleOnAddPlayer} primary>Create</Button>\n      </Container>\n    )\n  }\n}\n\nexport default graphql(SIGN_UP)(CreatePlayerForm);\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Block,\n  Grid,\n} from 'reakit';\nimport { get } from 'lodash';\nimport { palette as p } from 'styled-tools';\nimport { withApollo, graphql } from 'react-apollo';\n\nimport { ButtonForm } from '../../components/common';\nimport { UPDATE_AVAILABLE } from '../../graphql/mutations';\nimport { GET_ME } from '../../graphql/queries';\n\n\nconst template = `\n  \"a b c d e\" 40px / 1fr 1fr 120px 120px 120px\n`;\n\nclass PlayerItem extends React.Component { \n\n  handleOnUpdateAvailable = value => {\n    const { id, mutate, client } = this.props;\n    const input = {\n      value: parseInt(value, 10),\n      userId: id,\n    }\n    mutate({\n      variables: {\n        input,\n      },\n    }).then(result => {\n      console.log('>>>> update available result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() { \n    const { id, username, email, balance, available, atRisk } = this.props;\n    return (\n      <MyCard template={template}>\n        <Grid.Item area=\"a\">\n          <MyTitle>{username}</MyTitle>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <MyTitle>{email}</MyTitle>\n        </Grid.Item>\n        <Grid.Item area=\"c\">\n          <MyButton>{balance}</MyButton>\n        </Grid.Item>\n        <Grid.Item area=\"d\">\n          <ButtonForm\n            placeholder=\"0\"\n            onSuccess={this.handleOnUpdateAvailable}\n            onCancel={value => console.log('&&& on cancel: ', { value })}\n          >\n            {available}\n          </ButtonForm>\n        </Grid.Item>\n        <Grid.Item area=\"e\">\n          <MyButton>{atRisk}</MyButton>\n        </Grid.Item>\n      </MyCard>\n    );\n  }\n }\n\n\nconst MyCard = styled(Grid)`\n  align-items: center;\n  background-color: ${p('white')};\n  border-radius: 0.5rem;\n  &:hover {\n    box-shadow: 0 0 1px rgba(0,0,0,0.5); \n  }\n`;\n\nconst MyTitle = styled.div`\n  margin-left: 1rem;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.25rem;\n  padding: 1rem;\n  color: ${p('slate')};\n`;\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default withApollo(graphql(UPDATE_AVAILABLE)(PlayerItem));","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Button, Overlay, Block, Backdrop, Grid } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_USER_PLAYERS } from '../../graphql/queries';\nimport CreatePlayerForm from './CreatePlayerForm';\nimport PlayerItem from './PlayerItem';\n\n\nconst PlayerRaw = ({ player }) => (\n  <div key={player.id} style={{ backgroundColor: '#eaeaea', padding: '3px', marginBottom: '3px' }}>\n    <div>{player.username}</div>\n    <div>{player.email}</div>\n  </div>\n);\n\nconst template = `\n  \"a a1 ab ac ad\" auto\n  \"c c c c c\" auto / 1fr 1fr 120px 120px 120px\n`;\n\nclass PlayersList extends React.Component {\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.showForm,\n    });\n  }\n\n  render() {\n    return (\n      <Query query={GET_USER_PLAYERS} fetchPolicy=\"network-only\">\n        {({ loading, client, data }) => {\n          const players = get(data, ['me', 'players']);\n          const me = get(data, ['me']);\n          if (!players) return <div>Loading....</div>;\n          return (\n            <div>\n              <Overlay.Container>\n                {overlay => (\n                  <Block>\n                    <Button as={Overlay.Show} {...overlay} marginBottom=\"2rem\">Sign Up player</Button>\n                    <Backdrop fade as={Overlay.Hide} {...overlay} />\n                    <MyOverlay fade slide {...overlay}>\n                      <CreatePlayerForm me={me} onHide={overlay.hide} />\n                    </MyOverlay>\n                  </Block>\n                )}\n              </Overlay.Container>\n\n              <Grid template={template} gap=\"16px 0\">\n                <MyGridItem area=\"a\" left><Label>Username</Label></MyGridItem>\n                <MyGridItem area=\"a1\"><Label>Email</Label></MyGridItem>\n                <MyGridItem area=\"ab\"><Label center>Balance</Label></MyGridItem>\n                <MyGridItem area=\"ac\"><Label center>Available</Label></MyGridItem>\n                <MyGridItem area=\"ad\" right><Label center>At Risk</Label></MyGridItem>\n                <Grid.Item area=\"c\">\n                  {map(players, player => (\n                    <ListContainer key={player.id}>\n                      <PlayerItem\n                        id={player.id}\n                        username={player.username}\n                        email={player.email}\n                        balance={player.balance}\n                        available={player.available}\n                        atRisk={player.atRisk}\n                        key={player.id}\n                      />\n                    </ListContainer>\n                  ))}\n                </Grid.Item>\n              </Grid>\n\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default PlayersList;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst ListContainer = styled.div`\n  margin-top: 1rem;\n`;\n\nconst MyGridItem = styled(Grid.Item)`\n  padding: 0.5rem 0;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.right ? '0.5rem' : 0};\n  border-bottom-right-radius: ${props => props.right ? '0.5rem' : 0};\n`;\n\nconst Label = styled.div`\n  text-align: ${props => props.center ? 'center' : 'left'};\n  margin-left: 1rem;\n  /* justify-items: center; */\n`;\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../../components/SidebarMenu';\nimport PlayersList from './PlayersList';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\nconst template = `\n  \"b c c\" minmax(200px, 1fr)\n  \"d d d\" 100px / 1fr 2fr 2fr\n`;\n\nconst tree = {\n  players: [\n    {\n      title: 'list',\n      url: '/agent/players',\n    },\n  ],\n}\n\nconst Agent = ({ match }) => (\n  <ContentLayout\n    sidebar={<SidebarMenu match={match} tree={tree} />}\n  >\n    <Route path={`${match.path}/players`} component={PlayersList} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a page.</h3>}\n    />\n  </ContentLayout>\n);\n\nexport default Agent;","import React, { Component } from 'react';\nimport { Mutation, graphql, Query, renderToStringWithData } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nimport Button from '../../components/common/Button';\n\n\nconst MessageContainer = styled.div`\n  display: block;\n  border: 1px solid #366d9d;\n  padding: 1rem;\n  margin: 1rem;\n`;\n\nconst createMessage = gql`\n  mutation ($text: String!) {\n    createMessage(text: $text) {\n      message {\n        id\n        text\n      }\n      me {\n        id\n        username\n        messages {\n          id\n          text\n        }\n      }\n    }\n  }\n`;\n\nclass Messages extends Component {\n  state = {\n    text: '',\n  }\n\n  handleOnChangeText = (e) => {\n    this.setState({ text: e.target.value });\n  }\n\n  handleOnSave = () => {\n    const { mutate } = this.props;\n    const { text } = this.state;\n    mutate({\n      variables: {\n        text,\n      }\n    }).then(result => {\n      console.log('>>>> mutate result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <Query\n        query={gql`\n          {\n            messages {\n              id\n              text\n              createdAt\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>\n          if (error) return <p>Error...</p>\n          return ( \n            <div>\n              <div>\n                <p>text</p>\n                <input type=\"text\" value={text} onChange={this.handleOnChangeText} />\n              </div>\n              <Button onClick={this.handleOnSave}>Save</Button>\n              {data.messages.map(({ id, text, createdAt }) => (\n                <MessageContainer key={id}>\n                  <p>{text}</p>\n                  <p>{createdAt}</p>\n                </MessageContainer>\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default graphql(createMessage)(Messages);\n\n","import React, { Component } from 'react';\n// import styled from 'styled-components';\nimport { graphql } from \"react-apollo\";\nimport { Button, Input, Field, Label, styled, Backdrop, Overlay } from 'reakit';\nimport { Link } from 'react-router-dom';\nimport { palette as p } from 'styled-tools';\nimport Cookie from 'js-cookie';\n\n// import Button from '../../components/common/Button';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { SIGN_IN } from '../../graphql/mutations';\nimport { GET_ME } from '../../graphql/queries';\nimport SidebarMenu from '../../components/SidebarMenu';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\n\nclass SignIn extends Component { \n\n  state = {\n    username: '',\n    password: '',\n  }\n\n  handleOnChange = type => e => {\n    this.setState({ [type]: e.target.value });\n  }\n\n  handleOnSignIn = () => {\n    const { mutate } = this.props;\n    const { username, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        password,\n      },\n      update: (cache, result) => {\n        const { data: { signIn: { me } } } = result;\n        // const data = { me };\n        console.log('>>> sign in update: ', { me });\n        cache.writeQuery({\n          query: GET_ME,\n          data: { me },\n        });\n      }\n    }).then(result => {\n      const { data: { signIn: { token, me } } } = result;\n      Cookie.set('token', token)\n      this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <ContentLayout>\n        <Overlay.Container>\n          {overlay => (\n            <Container>\n              <MyBackdrop visible={true} />\n              <MyOverlay fade slide {...overlay} visible={true}>\n                <h3>Sign In</h3>\n                <Field marginBottom=\"1rem\">\n                  <Input\n                    id=\"username\"\n                    placeholder=\"email or username\"\n                    value={username}\n                    onChange={this.handleOnChange('username')}\n                  />\n                </Field>\n                <Field marginBottom=\"1rem\">\n                  <Input\n                    id=\"password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={this.handleOnChange('password')}\n                  />\n                </Field>\n                <Button onClick={this.handleOnSignIn} primary>Sign In</Button>\n                <MyLink to=\"/\">go to home page</MyLink>\n              </MyOverlay>\n            </Container>\n          )}\n        </Overlay.Container>\n      </ContentLayout>\n    );\n  }\n}\n\nexport default graphql(SIGN_IN)(appConsumerWrapper(SignIn));\n\nconst MyLink = styled(Link)`\n  float: right;\n`;\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyOverlay = styled(Overlay)`\n  min-width: 300px;\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyBackdrop = styled(Backdrop)`\n  background-color: white;\n`;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { ROLES } from './constants';\nimport Home from './pages/Home';\nimport Games from './pages/Games';\nimport Admin from './pages/Admin';\nimport Agent from './pages/Agent';\nimport Schedule from './pages/Schedule';\nimport SignIn from './pages/SignIn';\nimport { getAccessByRoles } from './utils';\nimport { styled } from 'reakit';\n\n\nconst Routes = ({ me }) => {\n  return (\n    <Main>\n      <Switch>\n        <Route exact path='/' component={() => <Redirect to=\"/games\"/>}/>\n        <Route\n          path='/games'\n          component={Games}\n        />\n        <Route\n          path='/admin'\n          render={(props) => (\n            (getAccessByRoles(me, [ROLES.ADMIN]))\n              ? <Admin {...props} />\n              : <Redirect to=\"/sign-in\" />\n          )}\n        />\n        <Route\n          path='/agent'\n          render={(props) => (\n            (getAccessByRoles(me, [ROLES.AGENT, ROLES.ADMIN]))\n              ? <Agent {...props} />\n              : <Redirect to=\"/sign-in\" />\n          )}\n        />\n        <Route path='/schedule' component={Schedule}/>\n        <Route path='/sign-in' component={SignIn}/>\n      </Switch>\n    </Main>\n  );\n}\n\nexport default Routes;\n\nconst Main = styled.main`\n  display: flex;\n  flex: 1;\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { get } from 'lodash';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Routes from './Routes';\nimport { GET_ME } from './graphql/queries';\nimport { GlobalStyle } from './components/common'\n\n\nconst App = () => (\n  <Query query={GET_ME} fetchPolicy=\"network-only\">\n    {({ client, loading, data }) => {\n      const me = get(data, ['me']);\n      return (\n        <React.Fragment>\n          <Header me={me} />\n          <Routes me={me} />\n          <Footer />\n          <GlobalStyle />\n        </React.Fragment>\n      );\n    }}\n  </Query>\n);\n\nexport default App;","import { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport Cookie from 'js-cookie';\n\nimport { errorParser } from './utils/errors';\n\n\nconst httpLink = createHttpLink({\n  // uri: 'http://itkartell.ru:5000/graphql',\n  uri: process.env.NODE_ENV === 'production'\n    ? 'http://89.223.93.192:5000/graphql'\n    : 'http://localhost:5000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = Cookie.get('token');\n  return {\n    headers: {\n      ...headers,\n      'Authorization': token ? token : '',\n    }\n  }\n});\n\nconst logLink = onError(({ graphQLErrors, networkError }) => {\n  const errorArr = errorParser({ graphQLErrors, networkError });\n  console.log('^^^^ errors handler: ', { graphQLErrors, networkError });\n  errorArr.map(err => {\n    if (err.statusCode === 401) {\n      Cookie.set('token', '');\n      window.location.href = '/sign-in';\n    }\n  })\n});\n\nexport default new ApolloClient({\n  link: logLink.concat(authLink.concat(httpLink)),\n  cache: new InMemoryCache(),\n});\n","export const errorParser = ({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    return graphQLErrors.map(err => {\n      switch (err.extensions.code) {\n        case 'UNAUTHENTICATED':\n          err.statusCode = 401;\n          break;\n        case 'FORBIDDEN':\n          err.statusCode = 403;\n          break;\n        default:\n          break;\n      }\n      return err;\n    });\n  }\n  return [networkError];\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\nimport { Provider } from 'reakit';\n// import theme from 'reakit-theme-default';\n\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport AppProvider from './wrappers/AppStore';\nimport client from './apolloClient';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <AppProvider>\n      <ApolloProvider client={client}>\n        <Provider theme={theme}>\n          <App />\n        </Provider>\n      </ApolloProvider>\n    </AppProvider>\n  </BrowserRouter>\n  , document.getElementById('root')\n  // , document.body\n);\n\n\nwindow.client = client;\nserviceWorker.unregister();\n"],"sourceRoot":""}