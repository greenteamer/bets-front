{"version":3,"sources":["theme.js","graphql/queries/user.js","graphql/queries/sport.js","graphql/queries/odd.js","components/ProfileMenu/SidebarProfile.js","components/ProfileMenu/index.js","wrappers/AppStore.js","constants.js","components/Header/index.js","pages/Home/index.js","components/common/Button/index.js","components/common/ButtonForm/index.js","components/common/Card/index.js","components/common/Wrapper/index.js","Context/UserContext.js","pages/Games/Plate/PlateItem.js","pages/Games/Plate/index.js","pages/Games/utils.js","pages/Games/OddsTable.js","pages/Games/Odds.js","components/SidebarMenu/index.js","components/Layouts/ContentLayout.js","pages/Games/index.js","graphql/mutations/user.js","pages/Admin/CreateUserForm.js","pages/Admin/List.js","pages/Admin/index.js","pages/Agent/CreatePlayerForm.js","pages/Agent/PlayersList.js","pages/Agent/index.js","pages/Schedule/index.js","pages/SignIn/index.js","utils/index.js","Routes.js","App.js","apolloClient.js","utils/errors.js","serviceWorker.js","index.js"],"names":["src_theme","Object","objectSpread","defaultTheme","palette","slate","lightGreyBlue","iceBlue","shamrockGreen","primary","p","secondary","white","Button","css","_templateObject","props","PLAYERS_FRAGMENT","gql","user_templateObject","GET_USERS","_templateObject2","GET_USER_PLAYERS","_templateObject3","GET_ME","_templateObject4","GET_SPORTS","sport_templateObject","GET_ODDS","odd_templateObject","SidebarProfile","_ref","me","onLogout","react_default","a","createElement","ProfileWrapper","Name","username","BillingInfo","SidebarProfile_InfoItem","title","value","ButtonS","onClick","InfoItem","_ref2","styled","SidebarProfile_templateObject","div","SidebarProfile_templateObject2","h2","SidebarProfile_templateObject3","SidebarProfile_templateObject4","_templateObject5","ProfileMenu","_this","this","handleLogout","Cookie","remove","refetch","data","ProfileContainer","es","Container","sidebar","HeaderElement","show","assign","fade","as","Sidebar","Hide","slide","align","HeaderLink","to","Component","ProfileMenu_templateObject","Link","ProfileMenu_templateObject2","span","ProfileMenu_templateObject3","withRouter","graphql","visibilityFilter","user","AppContext","React","createContext","appConsumerWrapper","Children","Consumer","context","AppProvider","state","setVisibilityFilter","setState","updateUserInfo","Provider","children","ROLES","ADMIN","AGENT","PLAYER","COLORS","Header","role","get","HeaderContainer","HeaderName","Logo","Slogan","HeaderMenu","MainMenu","Header_HeaderLink","components_ProfileMenu","Header_templateObject","Header_templateObject2","Header_templateObject3","Header_templateObject4","Header_templateObject5","_templateObject6","_templateObject7","Home","Button_templateObject","Button_templateObject2","ButtonForm","clearState","handleOnSuccess","popover","onSuccess","hide","handleOnCancel","onCancel","handleOnChange","e","target","_this2","relative","MyButton","Popover","Toggle","expand","hideOnClickOutside","Arrow","id","type","placeholder","onChange","marginTop","ButtonForm_templateObject","Card_templateObject","Card_templateObject2","Card_templateObject3","Wrapper_templateObject","GlobalStyle","createGlobalStyle","Wrapper_templateObject2","UserContext","UserStore","updateMe","_this$state","withUser","MyCard","Grid","PlateItem_templateObject","top","MyTitle","PlateItem_templateObject2","PlateItem_templateObject3","img","PlateItem_templateObject4","PlateItem_templateObject5","team","h2h","_ref$user","template","console","log","Item","area","PlateItem_Logo","PlateItem_MyButton","common_ButtonForm","Plate","_this$props","team1","theme","team2","commenceTime","homeTeam","sites","gutter","MyGrid","gap","Time","moment","format","Plate_PlateItem","Hr","withTheme","Plate_templateObject","Plate_templateObject2","Plate_templateObject3","formatUS","val","rateUSToFixed","Number","toFixed","concat","OddsTable","odds","length","sport_nice","MyGridItem","left","Label","right","backgroundColor","map","odd","index","Games_Plate","key","teams","home_team","commence_time","values","formatH2H","Overlay","OddsTable_templateObject","OddsTable_templateObject2","OddsTable_templateObject3","Odds","groupName","react_apollo_browser_umd","query","variables","sport_key","loading","client","Games_OddsTable","Menu","match","tree","NavigationS","HeadingS","keys","item","hidden","HiddenS","obj","SidebarMenu_ButtonS","LinkS","url","Navigation","SidebarMenu_templateObject","SidebarMenu_templateObject2","Heading","SidebarMenu_templateObject3","SidebarMenu_templateObject4","SidebarMenu_templateObject5","Hidden","SidebarMenu_templateObject6","generateTemplate","margin","Games","sports","mapSports","s","group","groupBy","Layouts_ContentLayout","SidebarMenu","Route","path","component","exact","render","SIGN_IN","mutations_user_templateObject","SIGN_UP","user_templateObject2","CreatePlayerForm","email","password","handleOnAddPlayer","mutate","then","result","signUp","onHide","catch","error","handleOnChangeInput","name","defineProperty","_this$state2","marginBottom","CreateUserForm_templateObject","PlayerRaw","player","style","padding","PlayersList","toggleForm","showForm","fetchPolicy","users","overlay","Show","List_MyOverlay","CreateUserForm","List_PlayerRaw","MyOverlay","List_templateObject","Agent","List","agentId","update","cache","newPlayer","root","readQuery","writeQuery","players","CreatePlayerForm_Container","CreatePlayerForm_templateObject","PlayersList_MyOverlay","Agent_CreatePlayerForm","PlayersList_PlayerRaw","PlayersList_templateObject","MessageContainer","Schedule_templateObject","createMessage","Schedule_templateObject2","Messages","text","handleOnChangeText","handleOnSave","Schedule_templateObject3","messages","createdAt","SignIn","handleOnSignIn","signIn","_result$data$signIn","token","set","history","push","SignIn_Container","MyBackdrop","visible","SignIn_MyOverlay","MyLink","SignIn_templateObject","SignIn_templateObject2","SignIn_templateObject3","Backdrop","SignIn_templateObject4","getAccessByRoles","rolesList","includes","Routes","Switch","Admin","Redirect","pages_Agent","Schedule","components_Header","src_Routes","httpLink","createHttpLink","uri","authLink","setContext","_","headers","Authorization","logLink","onError","errorArr","graphQLErrors","networkError","err","extensions","code","statusCode","errorParser","window","location","href","apolloClient","ApolloClient","link","InMemoryCache","Boolean","hostname","ReactDOM","BrowserRouter","AppStore_AppProvider","UserContext_UserStore","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf71b4b6.chunk.js","sourcesContent":["import { css } from \"reakit\";\nimport defaultTheme from \"reakit-theme-default\";\nimport { prop, palette as p } from 'styled-tools';\n\n\nexport default {\n  ...defaultTheme,\n\n  palette: {\n    ...defaultTheme.palette,\n\n    slate: '#455266',\n    lightGreyBlue: '#aeb8c7',\n    iceBlue: '#eef1f4',\n    shamrockGreen: '#00cf4f',\n\n    primary: [p('slate'), p('lightGreyBlue'), p('iceBlue')],\n    secondary: [p('shamrockGreen')],\n  },\n\n  white: 'white',\n\n  Button: css`\n    ${defaultTheme.Button};\n    background-color: ${props => props.secondary ? p('shamrockGreen') : p('slate')};\n  `,\n\n}","import gql from \"graphql-tag\";\n\nexport const PLAYERS_FRAGMENT = gql`\n  fragment UserPlayers on User {\n    players {\n      id\n      agentId\n      username\n      email\n      role\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  { \n    users {\n      id\n      username\n      email\n      role\n    }\n  }\n`;\n\nexport const GET_USER_PLAYERS = gql`\n  { \n    me {\n      id\n      agentId\n      username\n      email\n      role\n      ...UserPlayers\n    }\n  }\n  ${PLAYERS_FRAGMENT}\n`;\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      agentId\n      username\n      email\n      role\n      ...UserPlayers\n    }\n  }\n  ${PLAYERS_FRAGMENT}\n`;\n\n","import gql from \"graphql-tag\";\n\n\nexport const GET_SPORTS = gql`\n  {\n    sports {\n      key\n      active\n      group\n      details\n      title\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n\nexport const GET_ODDS = gql`\n  query ($sport_key:String!) {\n    odds(sport_key:$sport_key) {\n      sport_key\n      sport_nice\n      teams\n      commence_time\n      home_team\n      sites {\n        site_key\n        site_nice\n        last_update\n        odds {\n          h2h\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Cookie from 'js-cookie';\nimport { graphql } from \"react-apollo\";\nimport { styled, Block, Button, Backdrop, Sidebar } from \"reakit\";\n\nexport default ({ me, onLogout }) => (\n  <ProfileWrapper>\n    <Name>{me.username}</Name>\n    <BillingInfo>\n      <InfoItem title=\"Balance\" value={0} />\n      <InfoItem title=\"Available\" value={0} />\n      <InfoItem title=\"At Risk\" value={0} />\n    </BillingInfo>\n    <ButtonS onClick={onLogout}>Logout</ButtonS>\n  </ProfileWrapper>\n);\n\nconst InfoItem = ({ title, value }) => (\n  <div>{title}: {value}</div>\n);\n\nconst ButtonS = styled(Button)`\n  width: 100%;\n`;\nconst ProfileWrapper = styled.div`\n  min-width: 30rem;\n  padding: 1rem;\n`;\nconst Name = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n`;\nconst BillingInfo = styled.div`\n  padding: 1rem;\n  margin: 1rem 0;\n`;\nconst BillingItem = styled.div`\n`;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport Cookie from 'js-cookie';\nimport { graphql } from \"react-apollo\";\nimport { Block, Button, Backdrop, Sidebar } from \"reakit\";\n\nimport { GET_ME } from '../../graphql/queries'\nimport SidebarProfile from './SidebarProfile';\n\n\nclass ProfileMenu extends Component {\n  render() {\n    const { me } = this.props;\n    const handleLogout = () => {\n      Cookie.remove('token');\n      const { data: { refetch } } = this.props;\n      refetch();\n    }\n    if (me) {\n      return (\n        <ProfileContainer>\n          <Sidebar.Container>\n            {sidebar => (\n              <Block>\n                {/* <Button as={Sidebar.Show} {...sidebar}> */}\n                <HeaderElement\n                  onClick={sidebar.show}>\n                  Profile\n                </HeaderElement>\n                {/* </Button> */}\n                <Backdrop fade as={Sidebar.Hide} {...sidebar} />\n                <Sidebar slide align=\"right\" {...sidebar}>\n                  <SidebarProfile me={me} onLogout={handleLogout} />\n                </Sidebar>\n              </Block>\n            )}\n          </Sidebar.Container>\n        </ProfileContainer>\n      )\n    }\n    return (\n      <ProfileContainer>\n        <HeaderLink to=\"/sign-in\">Sing In</HeaderLink>\n      </ProfileContainer>\n    )\n  }\n}\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  color: white;\n`;\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n`;\n\nconst HeaderElement = styled.span`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\n\nexport default withRouter(graphql(GET_ME)(ProfileMenu))","import React from \"react\"\n\nconst value = {\n  visibilityFilter: \"SHOW_ALL\",\n  user: null,\n}\n\nexport const AppContext = React.createContext(value);\n\nexport const appConsumerWrapper = Children => props => (\n  <AppContext.Consumer>\n    {context => \n      <Children {...props} {...context} />\n    }\n  </AppContext.Consumer>\n);\n\nexport default class AppProvider extends React.Component {\n  state = value\n\n  setVisibilityFilter = visibilityFilter => {\n    this.setState({ visibilityFilter })\n  }\n\n  updateUserInfo = user => {\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n\n          visibilityFilter: this.state.visibilityFilter,\n          setVisibilityFilter: this.setVisibilityFilter,\n\n          // user info\n          user: this.state.user,\n          updateUserInfo: this.updateUserInfo,\n\n        }}>\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n}","export const ROLES = {\n  ADMIN: 'ADMIN',\n  AGENT: 'AGENT',\n  PLAYER: 'PLAYER',\n};\n\n\nexport const COLORS = {\n  white: 'white',\n  iceBlue: '#eef1f4',\n  lightGreyBlue: '#aeb8c7',\n  slate: '#455266',\n  shamrockGreen: '#00cf4f',\n  black: '#1b1b1b',\n}\n\nexport const theme = {\n  colors: {\n    primary: COLORS.slate,\n    secondary: COLORS.shamrockGreen,\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { get } from 'lodash';\n\nimport ProfileMenu from '../ProfileMenu';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { ROLES } from '../../constants';\n\n\nclass Header extends Component {\n\n  render() {\n    const { me } = this.props;\n    const role = get(me, ['role'])\n\n    return (\n      <HeaderContainer>\n        <HeaderName>\n          <Logo>Positive Bets</Logo>\n          <Slogan>Make bets is easy as posible</Slogan>\n        </HeaderName>\n        <HeaderMenu>\n          <MainMenu>\n            <HeaderLink to=\"/\">\n              Home\n            </HeaderLink>\n            <HeaderLink to=\"/games\">\n              Games\n            </HeaderLink>\n            {role === ROLES.ADMIN &&\n              <HeaderLink to=\"/admin\">\n                Admin\n              </HeaderLink>\n            }\n            {role === ROLES.AGENT &&\n              <HeaderLink to=\"/agent\">\n                Agent\n              </HeaderLink>\n            }\n          </MainMenu>\n          <ProfileMenu me={me} />\n        </HeaderMenu>\n      </HeaderContainer>\n    )\n  }\n}\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  padding: 1rem;\n  justify-content: space-between;\n  background: #376f9a;\n  color: white;\n`;\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem;\n`;\n\nconst HeaderMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst MainMenu = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\n\nconst HeaderName = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  font-size: 3.5rem;\n`;\n\nconst Slogan = styled.div`\n  display: flex;\n  align-self: flex-start;\n`;\n\nexport default withRouter(appConsumerWrapper(Header))","\nimport React from 'react';\n\nexport default () => (\n  <h1>Home 1</h1>\n);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nexport default styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: box-shadow 0.5s;\n  box-shadow: 1px 2px 20px rgba(0,0,0,0.1);\n  border-radius: 10rem;\n  padding: 0.5rem 2rem;\n  ${props => props.primary && css`\n    background: #376f9a;\n    color: white;\n  `};\n  &:hover {\n    cursor: pointer;\n    box-shadow: 1px 2px 20px rgba(0,0,0,0.2);\n  }\n  {...props}\n`;\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Popover,\n  Block,\n  Field,\n  Input,\n  Group,\n} from 'reakit';\nimport { palette as p } from 'styled-tools';\n\n\nclass ButtonForm extends React.Component { \n  state = {\n    value: '',\n  }\n\n  clearState = () => {\n    this.setState({ value: '' });\n  }\n\n  handleOnSuccess = popover => () => {\n    const { value } = this.state;\n    const { onSuccess } = this.props;\n    onSuccess(value);\n    this.clearState();\n    popover.hide();\n  }\n \n\n  handleOnCancel = popover => () => {\n    const { onCancel } = this.props;\n    onCancel();\n    this.clearState();\n    popover.hide();\n  }\n\n  handleOnChange = e => {\n    const { value } = e.target;\n    this.setState({ value });\n  }\n\n  render() { \n    const { children } = this.props;\n    const { value } = this.state;\n    return (\n      <Popover.Container>\n        {popover => (\n          <Block relative>\n            <MyButton as={Popover.Toggle} {...popover}>\n              {children}\n            </MyButton>\n            <Popover fade slide expand hideOnClickOutside {...popover}>\n              <Popover.Arrow />\n              <Block>\n                <Field>\n                  <Input\n                    id=\"input1\"\n                    type=\"number\"\n                    placeholder=\"Your bet\"\n                    value={value}\n                    onChange={this.handleOnChange}\n                  />\n                </Field>\n                <Group marginTop={8}>\n                  <Button secondary onClick={this.handleOnSuccess(popover)}>Ok</Button>\n                  <Button onClick={this.handleOnCancel(popover)}>Cancel</Button>\n                </Group>\n              </Block>\n            </Popover>\n          </Block>\n        )}\n      </Popover.Container>\n    );\n  }\n}\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default ButtonForm;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { COLORS } from '../../../constants';\n\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 1px 2px 50px rgba(0,0,0,0.1);\n`;\n\nexport const CardHeader = styled.div`\n  text-align: center;\n  border-bottom: 1px solid #c8e0f5;\n  padding: 1rem;\n  font-size: 2rem;\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { COLORS } from '../../../constants';\n\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  background-color: ${COLORS.iceBlue};\n  padding: 2rem;\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    @import url('https://fonts.googleapis.com/css?family=Rubik:300,400,500');\n    font-family: 'Rubik', sans-serif;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-size: 8px;\n  }\n\n  body {\n    margin: 0;\n  }\n\n  body, a, p, span {\n    font-size: 1.75rem;\n  }\n\n  h1 {\n    font-weight: 400;\n  }\n`\n","import React from 'react';\n\nconst initialState = {\n  me: {\n    username: 'Dave',\n    email: 'test@test.ru'\n  }\n};\n\nconst UserContext = React.createContext();\n\n\nexport default class UserStore extends React.Component {\n  state = {\n    me: null,\n  }\n\n  updateMe = me => {\n    this.setState({\n      me,\n    });\n  }\n\n  render() {\n    const {children} = this.props;\n    const { me, updateMe } = this.state;\n    return (\n      <UserContext.Provider value={{\n        me,\n        updateMe: this.updateMe,\n      }}>\n        {children}\n      </UserContext.Provider>\n    )\n  }\n}\n\nexport function withUser(Component) {\n  return function ConnectedComponent(props) {\n    return (\n      <UserContext.Consumer>\n        {user => <Component {...props} user={user} />}\n      </UserContext.Consumer>\n    );\n  }\n};\n\n","import React from 'react';\nimport {\n  styled,\n  Button,\n  Block,\n  Grid,\n} from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { ButtonForm } from '../../../components/common';\nimport { withUser } from '../../../Context/UserContext';\n\n\nconst template = `\n  \"a b c d e\" 40px / 40px 1fr 120px 120px 120px\n`;\n\nconst PlateItem = ({ team, h2h, top, user: { me, updateMe} }) => (\n  <MyCard template={template} top={top}>\n    {console.log('>>>> PlateItem me: ', { me, updateMe })}\n    <Grid.Item area=\"a\">\n      {/* <MyImage\n        src=\"//ssl.gstatic.com/onebox/media/sports/logos/ofjScRGiytT__Flak2j4dg_48x48.png\"\n        width={40}\n        height={40}\n        top={top}\n      /> */}\n      <Logo>Logo</Logo>\n    </Grid.Item>\n    <Grid.Item area=\"b\">\n      <MyTitle>{team}</MyTitle>\n    </Grid.Item>\n    <Grid.Item area=\"c\">\n      <MyButton>{0}</MyButton>\n    </Grid.Item>\n    <Grid.Item area=\"d\">\n      <MyButton>{0}</MyButton>\n    </Grid.Item>\n    <Grid.Item area=\"e\">\n      <ButtonForm\n        onSuccess={value => console.log('&&& on create: ', { value })}\n        onCancel={value => console.log('&&& on cancel: ', { value })}\n      >\n        {h2h}\n      </ButtonForm>\n    </Grid.Item>\n  </MyCard>\n);\n\n\nconst MyCard = styled(Grid)`\n  align-items: center;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.top ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.top ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.top ? 0 : '0.5rem'};\n  border-bottom-right-radius: ${props => props.top ? 0 : '0.5rem'};\n  &:hover {\n    box-shadow: 0 0 1px rgba(0,0,0,0.5); \n  }\n`;\n\nconst MyTitle = styled.div`\n  margin-left: 1rem;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.25rem;\n  padding: 1rem;\n  color: ${p('slate')};\n`;\n\nconst MyImage = styled.img`\n  border-top-left-radius: ${props => props.top ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.top ? 0 : '0.5rem'};\n`;\n\nconst MyButton = styled(Button)`\n  width: 100%;\n  background-color: ${p('white')};\n  color: ${p('black')};\n  &:active {\n    box-shadow: inset 0 0 999em rgba(0,0,0,0.15);\n  }\n`;\n\nexport default withUser(PlateItem);","import React from 'react';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\nimport moment from 'moment';\n\nimport PlateItem from './PlateItem';\nimport { ButtonForm } from '../../../components/common';\n\n\nclass Plate extends React.Component {\n  render() {\n    const { theme, team1, team2, homeTeam, commenceTime, sites, h2h, gutter } = this.props;\n    const template = `\n      \"a b\" auto / 120px auto\n    `;\n    return (\n      <MyGrid template={template} gap=\"16px\">\n        <Grid.Item area=\"a\">\n          <Time>\n            <div>\n              {moment(commenceTime * 1000).format('MMM DD')}\n            </div>\n            <div>\n              {moment(commenceTime * 1000).format('h:mm a')}\n            </div>\n          </Time>\n        </Grid.Item>\n        <Grid.Item area=\"b\">\n          <PlateItem team={team1} h2h={h2h[0]} top />\n          <Hr />\n          <PlateItem team={team2} h2h={h2h[1]} />\n        </Grid.Item>\n      </MyGrid>\n    );\n  }\n}\n\nexport default withTheme(Plate);\n\nconst Time = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100%;\n  flex-direction: column;\n  background-color: ${p('white')};\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.5rem;\n  /* height: 100%; */\n`;\n\nconst MyGrid = styled(Grid)`\n  margin-bottom: 2rem;\n`;\n\nconst Hr = styled.div`\n  height: 1px;\n  width: 100%;\n  margin: 0;\n`;\n","import { map } from 'lodash';\n\n\nexport const formatUS = val => {\n  if (val < 2) {\n    const del = val - 1;\n    const rateUS = 1 / del * 100;\n    const rateUSToFixed = Number((rateUS).toFixed(0));\n    return `-${rateUSToFixed}`;\n  }\n  const rateUSToFixed = Number((val * 100 - 100).toFixed(0));\n  return `+${rateUSToFixed}`;\n}","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme, Heading } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_ODDS } from '../../graphql/queries';\nimport Plate from './Plate';\nimport { formatUS } from './utils';\n\n\nclass OddsTable extends React.Component {\n\n  render() {\n    const { theme, odds } = this.props;\n    const groupName = get(this.props, ['match', 'params', 'groupName']);\n    const template = `\n      \"a a1 ab ac ad\" auto\n      \"c c c c c\" auto / 136px auto 120px 120px 120px\n    `;\n    if (odds.length === 0) return <p>no odds</p>;\n    const formatH2H = odd => {\n      const sites = get(odd, ['sites']);\n      const values = get(sites[0], ['odds', 'h2h']);\n      return map(values, formatUS);\n    }\n    return (\n      <div>\n        <Heading as=\"h4\">{ odds[0].sport_nice }</Heading>\n        <Grid template={template} gap=\"16px 0\">\n          <MyGridItem area=\"a\" left><Label>Date 1</Label></MyGridItem>\n          <MyGridItem area=\"a1\"></MyGridItem>\n          <MyGridItem area=\"ab\"><Label>Spread</Label></MyGridItem>\n          <MyGridItem area=\"ac\"><Label>Total</Label></MyGridItem>\n          <MyGridItem area=\"ad\" right><Label>M Line</Label></MyGridItem>\n          <Grid.Item area=\"c\" backgroundColor={theme.palette.iceBlue}>\n            {map(odds, (odd, index) => (\n              <Plate\n                key={index}\n                gutter=\"1rem 0\"\n                team1={odd.teams[0]}\n                team2={odd.teams[1]}\n                homeTeam={odd.home_team}\n                commenceTime={odd.commence_time}\n                sites={odd.sites}\n                h2h={formatH2H(odd)}\n              />\n            ))}\n          </Grid.Item>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withTheme(OddsTable);\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyGridItem = styled(Grid.Item)`\n  padding: 0.5rem 0;\n  background-color: ${p('white')};\n  border-top-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-bottom-left-radius: ${props => props.left ? '0.5rem' : 0};\n  border-top-right-radius: ${props => props.right ? '0.5rem' : 0};\n  border-bottom-right-radius: ${props => props.right ? '0.5rem' : 0};\n`;\n\nconst Label = styled.div`\n  text-align: center;\n  /* justify-items: center; */\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Card, Button, Overlay, Block, Backdrop, Flex, Grid, withTheme } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_ODDS } from '../../graphql/queries';\nimport Plate from './Plate';\nimport { formatUS } from './utils';\nimport OddsTable from './OddsTable';\n\n\nclass Odds extends React.Component {\n  render() {\n    const groupName = get(this.props, ['match', 'params', 'groupName']);\n    return (\n      <Query query={GET_ODDS} variables={{ sport_key: groupName }}>\n        {({ loading, client, data }) => {\n          const odds = get(data, ['odds']);\n          if (!odds) return <div>Loading....</div>;\n          return (\n            <OddsTable odds={odds} />\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Odds;\n","import React from 'react';\nimport { styled, Button, Box, Navigation, List, Heading, Hidden, Block } from 'reakit';\nimport { palette as p, prop } from 'styled-tools';\nimport { Link } from 'react-router-dom'\nimport { map } from 'lodash';\n\n\nconst Menu = ({ match, tree }) => {\n  return (\n    <Box>\n      <NavigationS>\n        <HeadingS as=\"h4\">Games Panel</HeadingS>\n        <List>\n          {map(Object.keys(tree), item => (\n            <Hidden.Container key={item}>\n              {hidden => (\n                <li>\n                  <Hidden.Toggle as={ButtonS} {...hidden}>{item}</Hidden.Toggle>\n                  <HiddenS {...hidden}>\n                    {map(tree[item], (obj, index) => (\n                      <ButtonS key={index}><LinkS to={obj.url}>{obj.title}</LinkS></ButtonS>\n                    ))}\n                  </HiddenS>\n                </li>\n              )}\n            </Hidden.Container>\n          ))}\n        </List>\n      </NavigationS>\n    </Box>\n  );\n}\n\nexport default Menu;\n\nconst NavigationS = styled(Navigation)`\n  /* width: 25rem; */\n  background-color: ${p('primary', 0)};\n  padding: 1rem;\n`;\n\nconst ButtonS = styled(Button)`\n  display: block;\n  text-align: left;\n  width: 100%;\n  height: 3rem;\n  line-height: 3rem;\n`;\n\nconst HeadingS = styled(Heading)`\n  color: ${p('blackText')};\n`;\n\nconst LinkS = styled(Link)`\n  color: ${p('blackText')};\n  text-decoration: none;\n`;\n\nconst LinkEmpty = styled.a`\n  display: block;\n  padding: 0.5rem;\n  color: ${p('blackText')};\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst HiddenS = styled(Hidden)`\n  padding: 1rem;\n`;","import React from 'react';\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../SidebarMenu';\n\n\nconst ContentLayout = ({ theme, children, sidebar }) => { \n  const template = generateTemplate(sidebar);\n  return (\n    <Grid template={template}>\n      {sidebar &&\n        <Grid.Item area=\"b\" backgroundColor={theme.palette.slate}>\n          {sidebar}\n        </Grid.Item>\n      }\n      <Grid.Item area=\"c\" backgroundColor={theme.palette.iceBlue}>\n        <Block margin=\"2rem\">\n          {children}\n        </Block>\n      </Grid.Item>\n    </Grid>\n  );\n}\n\nexport default withTheme(ContentLayout);\n\nconst generateTemplate = sidebar => {\n  if (sidebar) return `\n    \"b c c\" auto / 1fr 2fr 2fr\n  `;\n  return `\n    \"c c c\" auto / 1fr 2fr 2fr\n  `;\n}","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Query } from 'react-apollo';\nimport { get, groupBy, map } from 'lodash';\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport { GET_SPORTS } from '../../graphql/queries';\nimport Odds from './Odds';\nimport SidebarMenu from '../../components/SidebarMenu';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\n\nconst Games = ({ match }) => (\n  <Query query={GET_SPORTS}>\n    {({ loading, client, data }) => { \n      const sports = get(data, ['sports']);\n      const mapSports = map(sports, s => ({ group: s.group, title: s.title, url: `/games/${s.key}` }));\n      const tree = groupBy(mapSports, 'group');\n      return (\n        <ContentLayout\n          sidebar={<SidebarMenu match={match} tree={tree} />}\n        >\n          <Route path={`${match.path}/:groupName`} component={Odds} />\n          <Route\n            exact\n            path={match.path}\n            render={() => <h3>Please select a page.</h3>}\n          />\n        </ContentLayout>\n      );\n    }}\n  </Query>\n);\n\nexport default Games;","import gql from \"graphql-tag\";\n\n\nexport const SIGN_IN = gql`\n  mutation ($username: String!, $password: String!) {\n    signIn(login: $username, password: $password) {\n      token\n      me {\n        id\n        agentId\n        username\n        email\n        role\n        players {\n          id\n          agentId\n          email\n          username\n          role\n        }\n      }\n    }\n  }\n`;\n\n\nexport const SIGN_UP = gql`\n  mutation ($username: String!, $email: String!, $password: String!, $role: String!, $agentId: ID) {\n    signUp(username: $username, email: $email, password: $password, role: $role, agentId: $agentId) {\n      id\n      username\n      email\n      role\n      agentId\n    }\n  }\n`;\n","import React from 'react';\nimport { graphql } from \"react-apollo\";\nimport { get } from 'lodash';\nimport { Button, Input, Field, Label, styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { SIGN_UP } from '../../graphql/mutations';\nimport { GET_USER_PLAYERS, GET_ME } from '../../graphql/queries';\nimport { ROLES } from '../../constants'\n\n\nclass CreatePlayerForm extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  }\n\n  handleOnAddPlayer = () => {\n    const { mutate, me } = this.props;\n    console.log('>>>> handle on add user me: ', { me });\n    const { username, email, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        email,\n        password,\n        role: ROLES.AGENT,\n        // agentId: me.id,\n      },\n      // update: (cache, { data }) => {\n      //   const newPlayer = get(data, ['signUp']);\n      //   const root = cache.readQuery({ query: GET_ME })\n      //   cache.writeQuery({\n      //     query: GET_ME,\n      //     data: {\n      //       me: {\n      //         ...root.me,\n      //         players: root.me.players.concat([newPlayer]),\n      //       },\n      //     },\n      //   });\n      // }\n    }).then(result => {\n      const { data: { signUp } } = result;\n      const { onHide } = this.props;\n      onHide();\n      // this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  handleOnChangeInput = (name) => (e) => {\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <Container>\n        <h3>Create Player</h3>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={this.handleOnChangeInput('username')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleOnChangeInput('email')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleOnChangeInput('password')}\n          />\n        </Field>\n        <Button onClick={this.handleOnAddPlayer} primary>Create</Button>\n      </Container>\n    )\n  }\n}\n\nexport default graphql(SIGN_UP)(CreatePlayerForm);\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Button, Overlay, Block, Backdrop } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_USERS } from '../../graphql/queries';\nimport CreateUserForm from './CreateUserForm';\n\n\nconst PlayerRaw = ({ player }) => (\n  <div key={player.id} style={{ backgroundColor: '#eaeaea', padding: '3px', marginBottom: '3px' }}>\n    <div>{player.username}</div>\n    <div>{player.email}</div>\n  </div>\n);\n\nclass PlayersList extends React.Component {\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.showForm,\n    });\n  }\n\n  render() {\n    console.log('**** Player List props: ', { props: this.props });\n    return (\n      <Query query={GET_USERS} fetchPolicy=\"network-only\">\n        {({ loading, client, data }) => {\n          const users = get(data, ['users']);\n          const me = get(data, ['me']);\n          if (!users) return <div>Loading....</div>;\n          return (\n            <div>\n              <h3>Add user</h3>\n              <Overlay.Container>\n                {overlay => (\n                  <Block>\n                    <Button as={Overlay.Show} {...overlay}>Add</Button>\n                    <Backdrop fade as={Overlay.Hide} {...overlay} />\n                    <MyOverlay fade slide {...overlay}>\n                      <CreateUserForm me={me} onHide={overlay.hide} />\n                    </MyOverlay>\n                  </Block>\n                )}\n              </Overlay.Container>\n              <h3>User list {users.length}</h3>\n              {map(users, user => (\n                <PlayerRaw player={user} key={user.id} />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default PlayersList;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../../components/SidebarMenu';\nimport List from './List';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\nconst template = `\n  \"b c c\" minmax(200px, 1fr)\n  \"d d d\" 100px / 1fr 2fr 2fr\n`;\n\nconst tree = {\n  users: [\n    {\n      title: 'list',\n      url: '/admin/users',\n    },\n  ],\n}\n\nconst Agent = ({ match }) => (\n  <ContentLayout\n    sidebar={<SidebarMenu match={match} tree={tree} />}\n  >\n    <Route path={`${match.path}/users`} component={List} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a page.</h3>}\n    />\n  </ContentLayout>\n);\n\nexport default Agent;","import React from 'react';\nimport { graphql } from \"react-apollo\";\nimport { get } from 'lodash';\nimport { Button, Input, Field, Label, styled } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { SIGN_UP } from '../../graphql/mutations';\nimport { GET_USER_PLAYERS, GET_ME } from '../../graphql/queries';\nimport { ROLES } from '../../constants'\n\n\nclass CreatePlayerForm extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  }\n\n  handleOnAddPlayer = () => {\n    const { mutate, me } = this.props;\n    const { username, email, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        email,\n        password,\n        role: ROLES.PLAYER,\n        agentId: me.id,\n      },\n      update: (cache, { data }) => {\n        const newPlayer = get(data, ['signUp']);\n        const root = cache.readQuery({ query: GET_ME })\n        cache.writeQuery({\n          query: GET_ME,\n          data: {\n            me: {\n              ...root.me,\n              players: root.me.players.concat([newPlayer]),\n            },\n          },\n        });\n      }\n    }).then(result => {\n      const { data: { signUp } } = result;\n      const { onHide } = this.props;\n      onHide();\n      // this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  handleOnChangeInput = (name) => (e) => {\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <Container>\n        <h3>Create Player</h3>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"username\"\n            placeholder=\"username\"\n            value={username}\n            onChange={this.handleOnChangeInput('username')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={this.handleOnChangeInput('email')}\n          />\n        </Field>\n        <Field marginBottom=\"1rem\">\n          <Input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this.handleOnChangeInput('password')}\n          />\n        </Field>\n        <Button onClick={this.handleOnAddPlayer} primary>Create</Button>\n      </Container>\n    )\n  }\n}\n\nexport default graphql(SIGN_UP)(CreatePlayerForm);\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { map, get } from 'lodash';\nimport { styled, Button, Overlay, Block, Backdrop } from 'reakit';\nimport { palette as p } from 'styled-tools';\n\nimport { GET_USER_PLAYERS } from '../../graphql/queries';\nimport CreatePlayerForm from './CreatePlayerForm';\n\n\nconst PlayerRaw = ({ player }) => (\n  <div key={player.id} style={{ backgroundColor: '#eaeaea', padding: '3px', marginBottom: '3px' }}>\n    <div>{player.username}</div>\n    <div>{player.email}</div>\n  </div>\n);\n\nclass PlayersList extends React.Component {\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.showForm,\n    });\n  }\n\n  render() {\n    console.log('**** Player List props: ', { props: this.props });\n    return (\n      <Query query={GET_USER_PLAYERS} fetchPolicy=\"network-only\">\n        {({ loading, client, data }) => {\n          const players = get(data, ['me', 'players']);\n          const me = get(data, ['me']);\n          if (!players) return <div>Loading....</div>;\n          return (\n            <div>\n              <Overlay.Container>\n                {overlay => (\n                  <Block>\n                    <Button as={Overlay.Show} {...overlay}>Sign Up player</Button>\n                    <Backdrop fade as={Overlay.Hide} {...overlay} />\n                    <MyOverlay fade slide {...overlay}>\n                      <CreatePlayerForm me={me} onHide={overlay.hide} />\n                    </MyOverlay>\n                  </Block>\n                )}\n              </Overlay.Container>\n              <h3>Players list {players.length}</h3>\n              {map(players, player => (\n                <PlayerRaw player={player} key={player.id} />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default PlayersList;\n\nconst MyOverlay = styled(Overlay)`\n  background-color: ${p('grayscale', -2)};\n`;\n","import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { Block, Flex, Grid, withTheme } from 'reakit';\n\nimport SidebarMenu from '../../components/SidebarMenu';\nimport PlayersList from './PlayersList';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\nconst template = `\n  \"b c c\" minmax(200px, 1fr)\n  \"d d d\" 100px / 1fr 2fr 2fr\n`;\n\nconst tree = {\n  players: [\n    {\n      title: 'list',\n      url: '/agent/players',\n    },\n  ],\n}\n\nconst Agent = ({ match }) => (\n  <ContentLayout\n    sidebar={<SidebarMenu match={match} tree={tree} />}\n  >\n    <Route path={`${match.path}/players`} component={PlayersList} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a page.</h3>}\n    />\n  </ContentLayout>\n);\n\nexport default Agent;","import React, { Component } from 'react';\nimport { Mutation, graphql, Query, renderToStringWithData } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nimport Button from '../../components/common/Button';\n\n\nconst MessageContainer = styled.div`\n  display: block;\n  border: 1px solid #366d9d;\n  padding: 1rem;\n  margin: 1rem;\n`;\n\nconst createMessage = gql`\n  mutation ($text: String!) {\n    createMessage(text: $text) {\n      message {\n        id\n        text\n      }\n      me {\n        id\n        username\n        messages {\n          id\n          text\n        }\n      }\n    }\n  }\n`;\n\nclass Messages extends Component {\n  state = {\n    text: '',\n  }\n\n  handleOnChangeText = (e) => {\n    this.setState({ text: e.target.value });\n  }\n\n  handleOnSave = () => {\n    const { mutate } = this.props;\n    const { text } = this.state;\n    mutate({\n      variables: {\n        text,\n      }\n    }).then(result => {\n      console.log('>>>> mutate result: ', { result });\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <Query\n        query={gql`\n          {\n            messages {\n              id\n              text\n              createdAt\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>\n          if (error) return <p>Error...</p>\n          return ( \n            <div>\n              <div>\n                <p>text</p>\n                <input type=\"text\" value={text} onChange={this.handleOnChangeText} />\n              </div>\n              <Button onClick={this.handleOnSave}>Save</Button>\n              {data.messages.map(({ id, text, createdAt }) => (\n                <MessageContainer key={id}>\n                  <p>{text}</p>\n                  <p>{createdAt}</p>\n                </MessageContainer>\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default graphql(createMessage)(Messages);\n\n","import React, { Component } from 'react';\n// import styled from 'styled-components';\nimport { graphql } from \"react-apollo\";\nimport { Button, Input, Field, Label, styled, Backdrop, Overlay } from 'reakit';\nimport { Link } from 'react-router-dom';\nimport { palette as p } from 'styled-tools';\nimport Cookie from 'js-cookie';\n\n// import Button from '../../components/common/Button';\nimport { appConsumerWrapper } from '../../wrappers/AppStore';\nimport { SIGN_IN } from '../../graphql/mutations';\nimport { GET_ME } from '../../graphql/queries';\nimport SidebarMenu from '../../components/SidebarMenu';\nimport ContentLayout from '../../components/Layouts/ContentLayout';\n\n\nclass SignIn extends Component { \n\n  state = {\n    username: '',\n    password: '',\n  }\n\n  handleOnChange = type => e => {\n    this.setState({ [type]: e.target.value });\n  }\n\n  handleOnSignIn = () => {\n    const { mutate } = this.props;\n    const { username, password } = this.state;\n    mutate({\n      variables: {\n        username,\n        password,\n      },\n      update: (cache, result) => {\n        const { data: { signIn: { me } } } = result;\n        // const data = { me };\n        console.log('>>> sign in update: ', { me });\n        cache.writeQuery({\n          query: GET_ME,\n          data: { me },\n        });\n      }\n    }).then(result => {\n      const { data: { signIn: { token, me } } } = result;\n      Cookie.set('token', token)\n      this.props.history.push('/games');\n    }).catch(error => {\n      console.log('>>>> mutate error: ', { error });\n    });\n  }\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <ContentLayout>\n        <Overlay.Container>\n          {overlay => (\n            <Container>\n              <MyBackdrop visible={true} />\n              <MyOverlay fade slide {...overlay} visible={true}>\n                <h3>Sign In</h3>\n                <Field marginBottom=\"1rem\">\n                  <Input\n                    id=\"username\"\n                    placeholder=\"email or username\"\n                    value={username}\n                    onChange={this.handleOnChange('username')}\n                  />\n                </Field>\n                <Field marginBottom=\"1rem\">\n                  <Input\n                    id=\"password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={this.handleOnChange('password')}\n                  />\n                </Field>\n                <Button onClick={this.handleOnSignIn} primary>Sign In</Button>\n                <MyLink to=\"/\">go to home page</MyLink>\n              </MyOverlay>\n            </Container>\n          )}\n        </Overlay.Container>\n      </ContentLayout>\n    );\n  }\n}\n\nexport default graphql(SIGN_IN)(appConsumerWrapper(SignIn));\n\nconst MyLink = styled(Link)`\n  float: right;\n`;\n\nconst Container = styled.div`\n  padding: 1rem;\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyOverlay = styled(Overlay)`\n  min-width: 300px;\n  background-color: ${p('grayscale', -2)};\n`;\n\nconst MyBackdrop = styled(Backdrop)`\n  background-color: white;\n`;\n","import { ROLES } from '../constants';\nimport { map } from 'lodash';\n\n\nexport const getAccessByRoles = (me, rolesList) => {\n  if (!me) return false;\n  if (rolesList && !rolesList.includes(me.role)) return false;\n  return true;\n}\n\nexport const getRgba = (color, opacity) => {\n\n}","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { ROLES } from './constants';\nimport Home from './pages/Home';\nimport Games from './pages/Games';\nimport Admin from './pages/Admin';\nimport Agent from './pages/Agent';\nimport Schedule from './pages/Schedule';\nimport SignIn from './pages/SignIn';\nimport { getAccessByRoles } from './utils';\n\n\nconst Routes = ({ me }) => {\n  return (\n    <main>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route\n          path='/games'\n          component={Games}\n        />\n        <Route\n          path='/admin'\n          render={(props) => (\n            (getAccessByRoles(me, [ROLES.ADMIN]))\n              ? <Admin {...props} />\n              : <Redirect to=\"/sign-in\" />\n          )}\n        />\n        <Route\n          path='/agent'\n          render={(props) => (\n            (getAccessByRoles(me, [ROLES.AGENT, ROLES.ADMIN]))\n              ? <Agent {...props} />\n              : <Redirect to=\"/sign-in\" />\n          )}\n        />\n        <Route path='/schedule' component={Schedule}/>\n        <Route path='/sign-in' component={SignIn}/>\n      </Switch>\n    </main>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { get } from 'lodash';\n\nimport Header from './components/Header';\nimport Routes from './Routes';\nimport { GET_ME } from './graphql/queries';\nimport { GlobalStyle } from './components/common'\nimport { withUser } from './Context/UserContext';\n\n\nconst App = ({ user: { updateMe } }) => (\n  <Query query={GET_ME} fetchPolicy=\"network-only\">\n    {({ client, loading, data }) => {\n      const me = get(data, ['me']);\n      // updateMe(me);\n      return (\n        <div>\n          <Header me={me} />\n          <Routes me={me} />\n          <GlobalStyle />\n        </div>\n      );\n    }}\n  </Query>\n);\n\nexport default withUser(App);","import { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport Cookie from 'js-cookie';\n\nimport { errorParser } from './utils/errors';\n\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:5000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = Cookie.get('token');\n  return {\n    headers: {\n      ...headers,\n      'Authorization': token ? token : '',\n    }\n  }\n});\n\nconst logLink = onError(({ graphQLErrors, networkError }) => {\n  const errorArr = errorParser({ graphQLErrors, networkError });\n  console.log('^^^^ errors handler: ', errorArr);\n  errorArr.map(err => {\n    if (err.statusCode === 401) {\n      Cookie.set('token', '');\n      window.location.href = '/sign-in';\n    }\n  })\n});\n\nexport default new ApolloClient({\n  link: logLink.concat(authLink.concat(httpLink)),\n  cache: new InMemoryCache(),\n});\n","export const errorParser = ({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    return graphQLErrors.map(err => {\n      switch (err.extensions.code) {\n        case 'UNAUTHENTICATED':\n          err.statusCode = 401;\n          break;\n        case 'FORBIDDEN':\n          err.statusCode = 403;\n          break;\n        default:\n          break;\n      }\n      return err;\n    });\n  }\n  return [networkError];\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\nimport { Provider } from 'reakit';\n// import theme from 'reakit-theme-default';\n\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport AppProvider from './wrappers/AppStore';\nimport client from './apolloClient';\nimport * as serviceWorker from './serviceWorker';\nimport UserStore from './Context/UserContext';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <AppProvider>\n      <ApolloProvider client={client}>\n        <Provider theme={theme}>\n          <UserStore>\n            <App />\n          </UserStore>\n        </Provider>\n      </ApolloProvider>\n    </AppProvider>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nwindow.client = client;\nserviceWorker.unregister();\n"],"sourceRoot":""}